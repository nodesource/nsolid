// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nsolid.proto

#include "nsolid.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcagent {
PROTOBUF_CONSTEXPR RuntimeRequest::RuntimeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.requestid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RuntimeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeRequestDefaultTypeInternal() {}
  union {
    RuntimeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeRequestDefaultTypeInternal _RuntimeRequest_default_instance_;
PROTOBUF_CONSTEXPR RuntimeResponse::RuntimeResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.response_type_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct RuntimeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeResponseDefaultTypeInternal() {}
  union {
    RuntimeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeResponseDefaultTypeInternal _RuntimeResponse_default_instance_;
PROTOBUF_CONSTEXPR Time::Time(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.seconds_)*/int64_t{0}
  , /*decltype(_impl_.nanoseconds_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct TimeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TimeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~TimeDefaultTypeInternal() {}
  union {
    Time _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TimeDefaultTypeInternal _Time_default_instance_;
PROTOBUF_CONSTEXPR CommonResponse::CommonResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.agentid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.requestid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.timens_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.recorded_)*/nullptr
  , /*decltype(_impl_.duration_)*/0
  , /*decltype(_impl_.interval_)*/0
  , /*decltype(_impl_.time_)*/int64_t{0}
  , /*decltype(_impl_.version_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommonResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommonResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommonResponseDefaultTypeInternal() {}
  union {
    CommonResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommonResponseDefaultTypeInternal _CommonResponse_default_instance_;
PROTOBUF_CONSTEXPR InfoBody_VersionsEntry_DoNotUse::InfoBody_VersionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct InfoBody_VersionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoBody_VersionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoBody_VersionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    InfoBody_VersionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoBody_VersionsEntry_DoNotUseDefaultTypeInternal _InfoBody_VersionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR InfoBody::InfoBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.tags_)*/{}
  , /*decltype(_impl_.versions_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.app_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.arch_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cpumodel_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.execpath_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.hostname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.main_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.nodeenv_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.platform_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.cpucores_)*/0
  , /*decltype(_impl_.pid_)*/0
  , /*decltype(_impl_.processstart_)*/int64_t{0}
  , /*decltype(_impl_.totalmem_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InfoBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoBodyDefaultTypeInternal() {}
  union {
    InfoBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoBodyDefaultTypeInternal _InfoBody_default_instance_;
PROTOBUF_CONSTEXPR InfoResponse::InfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.common_)*/nullptr
  , /*decltype(_impl_.body_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct InfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InfoResponseDefaultTypeInternal() {}
  union {
    InfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InfoResponseDefaultTypeInternal _InfoResponse_default_instance_;
PROTOBUF_CONSTEXPR PackagesResponse::PackagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.common_)*/nullptr
  , /*decltype(_impl_.body_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PackagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackagesResponseDefaultTypeInternal() {}
  union {
    PackagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackagesResponseDefaultTypeInternal _PackagesResponse_default_instance_;
PROTOBUF_CONSTEXPR PackagesBody::PackagesBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.packages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PackagesBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackagesBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackagesBodyDefaultTypeInternal() {}
  union {
    PackagesBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackagesBodyDefaultTypeInternal _PackagesBody_default_instance_;
PROTOBUF_CONSTEXPR Package::Package(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dependencies_)*/{}
  , /*decltype(_impl_.path_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.version_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.main_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.required_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PackageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PackageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PackageDefaultTypeInternal() {}
  union {
    Package _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PackageDefaultTypeInternal _Package_default_instance_;
}  // namespace grpcagent
static ::_pb::Metadata file_level_metadata_nsolid_2eproto[10];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_nsolid_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_nsolid_2eproto = nullptr;

const uint32_t TableStruct_nsolid_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeRequest, _impl_.requestid_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeRequest, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeRequest, _impl_.command_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeResponse, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::grpcagent::RuntimeResponse, _impl_.response_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::Time, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::Time, _impl_.seconds_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Time, _impl_.nanoseconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.agentid_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.requestid_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.recorded_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.duration_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.interval_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.time_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommonResponse, _impl_.timens_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody_VersionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody_VersionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody_VersionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody_VersionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.app_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.arch_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.cpucores_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.cpumodel_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.execpath_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.hostname_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.main_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.nodeenv_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.pid_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.platform_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.processstart_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.tags_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.totalmem_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoBody, _impl_.versions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoResponse, _impl_.common_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::InfoResponse, _impl_.body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::PackagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::PackagesResponse, _impl_.common_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::PackagesResponse, _impl_.body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::PackagesBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::PackagesBody, _impl_.packages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::Package, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::Package, _impl_.path_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Package, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Package, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Package, _impl_.main_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Package, _impl_.dependencies_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Package, _impl_.required_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcagent::RuntimeRequest)},
  { 10, -1, -1, sizeof(::grpcagent::RuntimeResponse)},
  { 19, -1, -1, sizeof(::grpcagent::Time)},
  { 27, -1, -1, sizeof(::grpcagent::CommonResponse)},
  { 42, 50, -1, sizeof(::grpcagent::InfoBody_VersionsEntry_DoNotUse)},
  { 52, -1, -1, sizeof(::grpcagent::InfoBody)},
  { 73, -1, -1, sizeof(::grpcagent::InfoResponse)},
  { 81, -1, -1, sizeof(::grpcagent::PackagesResponse)},
  { 89, -1, -1, sizeof(::grpcagent::PackagesBody)},
  { 96, -1, -1, sizeof(::grpcagent::Package)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcagent::_RuntimeRequest_default_instance_._instance,
  &::grpcagent::_RuntimeResponse_default_instance_._instance,
  &::grpcagent::_Time_default_instance_._instance,
  &::grpcagent::_CommonResponse_default_instance_._instance,
  &::grpcagent::_InfoBody_VersionsEntry_DoNotUse_default_instance_._instance,
  &::grpcagent::_InfoBody_default_instance_._instance,
  &::grpcagent::_InfoResponse_default_instance_._instance,
  &::grpcagent::_PackagesResponse_default_instance_._instance,
  &::grpcagent::_PackagesBody_default_instance_._instance,
  &::grpcagent::_Package_default_instance_._instance,
};

const char descriptor_table_protodef_nsolid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014nsolid.proto\022\tgrpcagent\"Q\n\016RuntimeRequ"
  "est\022\021\n\trequestId\030\001 \001(\t\022\017\n\007version\030\002 \001(\005\022"
  "\n\n\002id\030\003 \001(\t\022\017\n\007command\030\004 \001(\t\"\215\001\n\017Runtime"
  "Response\0220\n\rinfo_response\030\001 \001(\0132\027.grpcag"
  "ent.InfoResponseH\000\0227\n\020metrics_response\030\002"
  " \001(\0132\033.grpcagent.PackagesResponseH\000B\017\n\rr"
  "esponse_type\",\n\004Time\022\017\n\007seconds\030\001 \001(\003\022\023\n"
  "\013nanoseconds\030\002 \001(\005\"\273\001\n\016CommonResponse\022\017\n"
  "\007agentId\030\001 \001(\t\022\021\n\trequestId\030\002 \001(\t\022\017\n\007com"
  "mand\030\003 \001(\t\022!\n\010recorded\030\004 \001(\0132\017.grpcagent"
  ".Time\022\020\n\010duration\030\005 \001(\005\022\020\n\010interval\030\006 \001("
  "\005\022\017\n\007version\030\007 \001(\005\022\014\n\004time\030\010 \001(\003\022\016\n\006time"
  "NS\030\t \001(\t\"\323\002\n\010InfoBody\022\013\n\003app\030\001 \001(\t\022\014\n\004ar"
  "ch\030\002 \001(\t\022\020\n\010cpuCores\030\003 \001(\005\022\020\n\010cpuModel\030\004"
  " \001(\t\022\020\n\010execPath\030\005 \001(\t\022\020\n\010hostname\030\006 \001(\t"
  "\022\n\n\002id\030\007 \001(\t\022\014\n\004main\030\010 \001(\t\022\017\n\007nodeEnv\030\t "
  "\001(\t\022\013\n\003pid\030\n \001(\005\022\020\n\010platform\030\013 \001(\t\022\024\n\014pr"
  "ocessStart\030\014 \001(\003\022\014\n\004tags\030\r \003(\t\022\020\n\010totalM"
  "em\030\016 \001(\003\0223\n\010versions\030\017 \003(\0132!.grpcagent.I"
  "nfoBody.VersionsEntry\032/\n\rVersionsEntry\022\013"
  "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\\\n\014InfoRe"
  "sponse\022)\n\006common\030\001 \001(\0132\031.grpcagent.Commo"
  "nResponse\022!\n\004body\030\002 \001(\0132\023.grpcagent.Info"
  "Body\"d\n\020PackagesResponse\022)\n\006common\030\001 \001(\013"
  "2\031.grpcagent.CommonResponse\022%\n\004body\030\002 \001("
  "\0132\027.grpcagent.PackagesBody\"4\n\014PackagesBo"
  "dy\022$\n\010packages\030\001 \003(\0132\022.grpcagent.Package"
  "\"l\n\007Package\022\014\n\004path\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022"
  "\017\n\007version\030\003 \001(\t\022\014\n\004main\030\004 \001(\t\022\024\n\014depend"
  "encies\030\005 \003(\t\022\020\n\010required\030\006 \001(\010b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_nsolid_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_nsolid_2eproto = {
    false, false, 1198, descriptor_table_protodef_nsolid_2eproto,
    "nsolid.proto",
    &descriptor_table_nsolid_2eproto_once, nullptr, 0, 10,
    schemas, file_default_instances, TableStruct_nsolid_2eproto::offsets,
    file_level_metadata_nsolid_2eproto, file_level_enum_descriptors_nsolid_2eproto,
    file_level_service_descriptors_nsolid_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_nsolid_2eproto_getter() {
  return &descriptor_table_nsolid_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_nsolid_2eproto(&descriptor_table_nsolid_2eproto);
namespace grpcagent {

// ===================================================================

class RuntimeRequest::_Internal {
 public:
};

RuntimeRequest::RuntimeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.RuntimeRequest)
}
RuntimeRequest::RuntimeRequest(const RuntimeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuntimeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.requestid_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.command_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requestid().empty()) {
    _this->_impl_.requestid_.Set(from._internal_requestid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_command().empty()) {
    _this->_impl_.command_.Set(from._internal_command(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.version_ = from._impl_.version_;
  // @@protoc_insertion_point(copy_constructor:grpcagent.RuntimeRequest)
}

inline void RuntimeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.requestid_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.command_){}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RuntimeRequest::~RuntimeRequest() {
  // @@protoc_insertion_point(destructor:grpcagent.RuntimeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RuntimeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.requestid_.Destroy();
  _impl_.id_.Destroy();
  _impl_.command_.Destroy();
}

void RuntimeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuntimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.RuntimeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requestid_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.command_.ClearToEmpty();
  _impl_.version_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuntimeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string requestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_requestid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.RuntimeRequest.requestId"));
        } else
          goto handle_unusual;
        continue;
      // int32 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.RuntimeRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string command = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_command();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.RuntimeRequest.command"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuntimeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.RuntimeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestId = 1;
  if (!this->_internal_requestid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestid().data(), static_cast<int>(this->_internal_requestid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.RuntimeRequest.requestId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_requestid(), target);
  }

  // int32 version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_version(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.RuntimeRequest.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // string command = 4;
  if (!this->_internal_command().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.RuntimeRequest.command");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_command(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.RuntimeRequest)
  return target;
}

size_t RuntimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.RuntimeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string requestId = 1;
  if (!this->_internal_requestid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestid());
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string command = 4;
  if (!this->_internal_command().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // int32 version = 2;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuntimeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuntimeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuntimeRequest::GetClassData() const { return &_class_data_; }


void RuntimeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuntimeRequest*>(&to_msg);
  auto& from = static_cast<const RuntimeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.RuntimeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_requestid().empty()) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuntimeRequest::CopyFrom(const RuntimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.RuntimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeRequest::IsInitialized() const {
  return true;
}

void RuntimeRequest::InternalSwap(RuntimeRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requestid_, lhs_arena,
      &other->_impl_.requestid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.command_, lhs_arena,
      &other->_impl_.command_, rhs_arena
  );
  swap(_impl_.version_, other->_impl_.version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RuntimeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[0]);
}

// ===================================================================

class RuntimeResponse::_Internal {
 public:
  static const ::grpcagent::InfoResponse& info_response(const RuntimeResponse* msg);
  static const ::grpcagent::PackagesResponse& metrics_response(const RuntimeResponse* msg);
};

const ::grpcagent::InfoResponse&
RuntimeResponse::_Internal::info_response(const RuntimeResponse* msg) {
  return *msg->_impl_.response_type_.info_response_;
}
const ::grpcagent::PackagesResponse&
RuntimeResponse::_Internal::metrics_response(const RuntimeResponse* msg) {
  return *msg->_impl_.response_type_.metrics_response_;
}
void RuntimeResponse::set_allocated_info_response(::grpcagent::InfoResponse* info_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (info_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(info_response);
    if (message_arena != submessage_arena) {
      info_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, info_response, submessage_arena);
    }
    set_has_info_response();
    _impl_.response_type_.info_response_ = info_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpcagent.RuntimeResponse.info_response)
}
void RuntimeResponse::set_allocated_metrics_response(::grpcagent::PackagesResponse* metrics_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_response_type();
  if (metrics_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(metrics_response);
    if (message_arena != submessage_arena) {
      metrics_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, metrics_response, submessage_arena);
    }
    set_has_metrics_response();
    _impl_.response_type_.metrics_response_ = metrics_response;
  }
  // @@protoc_insertion_point(field_set_allocated:grpcagent.RuntimeResponse.metrics_response)
}
RuntimeResponse::RuntimeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.RuntimeResponse)
}
RuntimeResponse::RuntimeResponse(const RuntimeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuntimeResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.response_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_response_type();
  switch (from.response_type_case()) {
    case kInfoResponse: {
      _this->_internal_mutable_info_response()->::grpcagent::InfoResponse::MergeFrom(
          from._internal_info_response());
      break;
    }
    case kMetricsResponse: {
      _this->_internal_mutable_metrics_response()->::grpcagent::PackagesResponse::MergeFrom(
          from._internal_metrics_response());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.RuntimeResponse)
}

inline void RuntimeResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.response_type_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_response_type();
}

RuntimeResponse::~RuntimeResponse() {
  // @@protoc_insertion_point(destructor:grpcagent.RuntimeResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RuntimeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_response_type()) {
    clear_response_type();
  }
}

void RuntimeResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuntimeResponse::clear_response_type() {
// @@protoc_insertion_point(one_of_clear_start:grpcagent.RuntimeResponse)
  switch (response_type_case()) {
    case kInfoResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.info_response_;
      }
      break;
    }
    case kMetricsResponse: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.response_type_.metrics_response_;
      }
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}


void RuntimeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.RuntimeResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_response_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuntimeResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.InfoResponse info_response = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_info_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.PackagesResponse metrics_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metrics_response(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuntimeResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.RuntimeResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.InfoResponse info_response = 1;
  if (_internal_has_info_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::info_response(this),
        _Internal::info_response(this).GetCachedSize(), target, stream);
  }

  // .grpcagent.PackagesResponse metrics_response = 2;
  if (_internal_has_metrics_response()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::metrics_response(this),
        _Internal::metrics_response(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.RuntimeResponse)
  return target;
}

size_t RuntimeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.RuntimeResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (response_type_case()) {
    // .grpcagent.InfoResponse info_response = 1;
    case kInfoResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.info_response_);
      break;
    }
    // .grpcagent.PackagesResponse metrics_response = 2;
    case kMetricsResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.response_type_.metrics_response_);
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuntimeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuntimeResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuntimeResponse::GetClassData() const { return &_class_data_; }


void RuntimeResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuntimeResponse*>(&to_msg);
  auto& from = static_cast<const RuntimeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.RuntimeResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.response_type_case()) {
    case kInfoResponse: {
      _this->_internal_mutable_info_response()->::grpcagent::InfoResponse::MergeFrom(
          from._internal_info_response());
      break;
    }
    case kMetricsResponse: {
      _this->_internal_mutable_metrics_response()->::grpcagent::PackagesResponse::MergeFrom(
          from._internal_metrics_response());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuntimeResponse::CopyFrom(const RuntimeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.RuntimeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeResponse::IsInitialized() const {
  return true;
}

void RuntimeResponse::InternalSwap(RuntimeResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.response_type_, other->_impl_.response_type_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RuntimeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[1]);
}

// ===================================================================

class Time::_Internal {
 public:
};

Time::Time(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.Time)
}
Time::Time(const Time& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Time* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.seconds_){}
    , decltype(_impl_.nanoseconds_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.seconds_, &from._impl_.seconds_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.nanoseconds_) -
    reinterpret_cast<char*>(&_impl_.seconds_)) + sizeof(_impl_.nanoseconds_));
  // @@protoc_insertion_point(copy_constructor:grpcagent.Time)
}

inline void Time::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.seconds_){int64_t{0}}
    , decltype(_impl_.nanoseconds_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

Time::~Time() {
  // @@protoc_insertion_point(destructor:grpcagent.Time)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Time::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void Time::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Time::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.Time)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.seconds_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.nanoseconds_) -
      reinterpret_cast<char*>(&_impl_.seconds_)) + sizeof(_impl_.nanoseconds_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Time::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 seconds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 nanoseconds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.nanoseconds_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Time::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.Time)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->_internal_seconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_seconds(), target);
  }

  // int32 nanoseconds = 2;
  if (this->_internal_nanoseconds() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_nanoseconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.Time)
  return target;
}

size_t Time::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.Time)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 seconds = 1;
  if (this->_internal_seconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_seconds());
  }

  // int32 nanoseconds = 2;
  if (this->_internal_nanoseconds() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_nanoseconds());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Time::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Time::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Time::GetClassData() const { return &_class_data_; }


void Time::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Time*>(&to_msg);
  auto& from = static_cast<const Time&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.Time)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seconds() != 0) {
    _this->_internal_set_seconds(from._internal_seconds());
  }
  if (from._internal_nanoseconds() != 0) {
    _this->_internal_set_nanoseconds(from._internal_nanoseconds());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Time::CopyFrom(const Time& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.Time)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Time::IsInitialized() const {
  return true;
}

void Time::InternalSwap(Time* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Time, _impl_.nanoseconds_)
      + sizeof(Time::_impl_.nanoseconds_)
      - PROTOBUF_FIELD_OFFSET(Time, _impl_.seconds_)>(
          reinterpret_cast<char*>(&_impl_.seconds_),
          reinterpret_cast<char*>(&other->_impl_.seconds_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Time::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[2]);
}

// ===================================================================

class CommonResponse::_Internal {
 public:
  static const ::grpcagent::Time& recorded(const CommonResponse* msg);
};

const ::grpcagent::Time&
CommonResponse::_Internal::recorded(const CommonResponse* msg) {
  return *msg->_impl_.recorded_;
}
CommonResponse::CommonResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.CommonResponse)
}
CommonResponse::CommonResponse(const CommonResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommonResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.agentid_){}
    , decltype(_impl_.requestid_){}
    , decltype(_impl_.command_){}
    , decltype(_impl_.timens_){}
    , decltype(_impl_.recorded_){nullptr}
    , decltype(_impl_.duration_){}
    , decltype(_impl_.interval_){}
    , decltype(_impl_.time_){}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.agentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_agentid().empty()) {
    _this->_impl_.agentid_.Set(from._internal_agentid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requestid().empty()) {
    _this->_impl_.requestid_.Set(from._internal_requestid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_command().empty()) {
    _this->_impl_.command_.Set(from._internal_command(), 
      _this->GetArenaForAllocation());
  }
  _impl_.timens_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.timens_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_timens().empty()) {
    _this->_impl_.timens_.Set(from._internal_timens(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_recorded()) {
    _this->_impl_.recorded_ = new ::grpcagent::Time(*from._impl_.recorded_);
  }
  ::memcpy(&_impl_.duration_, &from._impl_.duration_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.version_) -
    reinterpret_cast<char*>(&_impl_.duration_)) + sizeof(_impl_.version_));
  // @@protoc_insertion_point(copy_constructor:grpcagent.CommonResponse)
}

inline void CommonResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.agentid_){}
    , decltype(_impl_.requestid_){}
    , decltype(_impl_.command_){}
    , decltype(_impl_.timens_){}
    , decltype(_impl_.recorded_){nullptr}
    , decltype(_impl_.duration_){0}
    , decltype(_impl_.interval_){0}
    , decltype(_impl_.time_){int64_t{0}}
    , decltype(_impl_.version_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.agentid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.agentid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.timens_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.timens_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CommonResponse::~CommonResponse() {
  // @@protoc_insertion_point(destructor:grpcagent.CommonResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommonResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.agentid_.Destroy();
  _impl_.requestid_.Destroy();
  _impl_.command_.Destroy();
  _impl_.timens_.Destroy();
  if (this != internal_default_instance()) delete _impl_.recorded_;
}

void CommonResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommonResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.CommonResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.agentid_.ClearToEmpty();
  _impl_.requestid_.ClearToEmpty();
  _impl_.command_.ClearToEmpty();
  _impl_.timens_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.recorded_ != nullptr) {
    delete _impl_.recorded_;
  }
  _impl_.recorded_ = nullptr;
  ::memset(&_impl_.duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.duration_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommonResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string agentId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_agentid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommonResponse.agentId"));
        } else
          goto handle_unusual;
        continue;
      // string requestId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_requestid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommonResponse.requestId"));
        } else
          goto handle_unusual;
        continue;
      // string command = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_command();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommonResponse.command"));
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.Time recorded = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_recorded(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 duration = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.duration_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 interval = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 version = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 time = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string timeNS = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_timens();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommonResponse.timeNS"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommonResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.CommonResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string agentId = 1;
  if (!this->_internal_agentid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_agentid().data(), static_cast<int>(this->_internal_agentid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommonResponse.agentId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_agentid(), target);
  }

  // string requestId = 2;
  if (!this->_internal_requestid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestid().data(), static_cast<int>(this->_internal_requestid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommonResponse.requestId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_requestid(), target);
  }

  // string command = 3;
  if (!this->_internal_command().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommonResponse.command");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_command(), target);
  }

  // .grpcagent.Time recorded = 4;
  if (this->_internal_has_recorded()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::recorded(this),
        _Internal::recorded(this).GetCachedSize(), target, stream);
  }

  // int32 duration = 5;
  if (this->_internal_duration() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_duration(), target);
  }

  // int32 interval = 6;
  if (this->_internal_interval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_interval(), target);
  }

  // int32 version = 7;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_version(), target);
  }

  // int64 time = 8;
  if (this->_internal_time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_time(), target);
  }

  // string timeNS = 9;
  if (!this->_internal_timens().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timens().data(), static_cast<int>(this->_internal_timens().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommonResponse.timeNS");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_timens(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.CommonResponse)
  return target;
}

size_t CommonResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.CommonResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string agentId = 1;
  if (!this->_internal_agentid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_agentid());
  }

  // string requestId = 2;
  if (!this->_internal_requestid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestid());
  }

  // string command = 3;
  if (!this->_internal_command().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // string timeNS = 9;
  if (!this->_internal_timens().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timens());
  }

  // .grpcagent.Time recorded = 4;
  if (this->_internal_has_recorded()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.recorded_);
  }

  // int32 duration = 5;
  if (this->_internal_duration() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_duration());
  }

  // int32 interval = 6;
  if (this->_internal_interval() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_interval());
  }

  // int64 time = 8;
  if (this->_internal_time() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_time());
  }

  // int32 version = 7;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommonResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommonResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommonResponse::GetClassData() const { return &_class_data_; }


void CommonResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommonResponse*>(&to_msg);
  auto& from = static_cast<const CommonResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.CommonResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_agentid().empty()) {
    _this->_internal_set_agentid(from._internal_agentid());
  }
  if (!from._internal_requestid().empty()) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  if (!from._internal_timens().empty()) {
    _this->_internal_set_timens(from._internal_timens());
  }
  if (from._internal_has_recorded()) {
    _this->_internal_mutable_recorded()->::grpcagent::Time::MergeFrom(
        from._internal_recorded());
  }
  if (from._internal_duration() != 0) {
    _this->_internal_set_duration(from._internal_duration());
  }
  if (from._internal_interval() != 0) {
    _this->_internal_set_interval(from._internal_interval());
  }
  if (from._internal_time() != 0) {
    _this->_internal_set_time(from._internal_time());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommonResponse::CopyFrom(const CommonResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.CommonResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommonResponse::IsInitialized() const {
  return true;
}

void CommonResponse::InternalSwap(CommonResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.agentid_, lhs_arena,
      &other->_impl_.agentid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requestid_, lhs_arena,
      &other->_impl_.requestid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.command_, lhs_arena,
      &other->_impl_.command_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.timens_, lhs_arena,
      &other->_impl_.timens_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommonResponse, _impl_.version_)
      + sizeof(CommonResponse::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CommonResponse, _impl_.recorded_)>(
          reinterpret_cast<char*>(&_impl_.recorded_),
          reinterpret_cast<char*>(&other->_impl_.recorded_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommonResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[3]);
}

// ===================================================================

InfoBody_VersionsEntry_DoNotUse::InfoBody_VersionsEntry_DoNotUse() {}
InfoBody_VersionsEntry_DoNotUse::InfoBody_VersionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void InfoBody_VersionsEntry_DoNotUse::MergeFrom(const InfoBody_VersionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata InfoBody_VersionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[4]);
}

// ===================================================================

class InfoBody::_Internal {
 public:
};

InfoBody::InfoBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &InfoBody::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:grpcagent.InfoBody)
}
InfoBody::InfoBody(const InfoBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InfoBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){from._impl_.tags_}
    , /*decltype(_impl_.versions_)*/{}
    , decltype(_impl_.app_){}
    , decltype(_impl_.arch_){}
    , decltype(_impl_.cpumodel_){}
    , decltype(_impl_.execpath_){}
    , decltype(_impl_.hostname_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.main_){}
    , decltype(_impl_.nodeenv_){}
    , decltype(_impl_.platform_){}
    , decltype(_impl_.cpucores_){}
    , decltype(_impl_.pid_){}
    , decltype(_impl_.processstart_){}
    , decltype(_impl_.totalmem_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.versions_.MergeFrom(from._impl_.versions_);
  _impl_.app_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_app().empty()) {
    _this->_impl_.app_.Set(from._internal_app(), 
      _this->GetArenaForAllocation());
  }
  _impl_.arch_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.arch_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_arch().empty()) {
    _this->_impl_.arch_.Set(from._internal_arch(), 
      _this->GetArenaForAllocation());
  }
  _impl_.cpumodel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cpumodel_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_cpumodel().empty()) {
    _this->_impl_.cpumodel_.Set(from._internal_cpumodel(), 
      _this->GetArenaForAllocation());
  }
  _impl_.execpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execpath().empty()) {
    _this->_impl_.execpath_.Set(from._internal_execpath(), 
      _this->GetArenaForAllocation());
  }
  _impl_.hostname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hostname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_hostname().empty()) {
    _this->_impl_.hostname_.Set(from._internal_hostname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.main_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.main_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_main().empty()) {
    _this->_impl_.main_.Set(from._internal_main(), 
      _this->GetArenaForAllocation());
  }
  _impl_.nodeenv_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nodeenv_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nodeenv().empty()) {
    _this->_impl_.nodeenv_.Set(from._internal_nodeenv(), 
      _this->GetArenaForAllocation());
  }
  _impl_.platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_platform().empty()) {
    _this->_impl_.platform_.Set(from._internal_platform(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.cpucores_, &from._impl_.cpucores_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.totalmem_) -
    reinterpret_cast<char*>(&_impl_.cpucores_)) + sizeof(_impl_.totalmem_));
  // @@protoc_insertion_point(copy_constructor:grpcagent.InfoBody)
}

inline void InfoBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.tags_){arena}
    , /*decltype(_impl_.versions_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.app_){}
    , decltype(_impl_.arch_){}
    , decltype(_impl_.cpumodel_){}
    , decltype(_impl_.execpath_){}
    , decltype(_impl_.hostname_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.main_){}
    , decltype(_impl_.nodeenv_){}
    , decltype(_impl_.platform_){}
    , decltype(_impl_.cpucores_){0}
    , decltype(_impl_.pid_){0}
    , decltype(_impl_.processstart_){int64_t{0}}
    , decltype(_impl_.totalmem_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.app_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.app_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.arch_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.arch_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.cpumodel_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.cpumodel_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.execpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.execpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.hostname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.hostname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.main_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.main_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nodeenv_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nodeenv_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.platform_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.platform_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InfoBody::~InfoBody() {
  // @@protoc_insertion_point(destructor:grpcagent.InfoBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void InfoBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedPtrField();
  _impl_.versions_.Destruct();
  _impl_.versions_.~MapField();
  _impl_.app_.Destroy();
  _impl_.arch_.Destroy();
  _impl_.cpumodel_.Destroy();
  _impl_.execpath_.Destroy();
  _impl_.hostname_.Destroy();
  _impl_.id_.Destroy();
  _impl_.main_.Destroy();
  _impl_.nodeenv_.Destroy();
  _impl_.platform_.Destroy();
}

void InfoBody::ArenaDtor(void* object) {
  InfoBody* _this = reinterpret_cast< InfoBody* >(object);
  _this->_impl_.versions_.Destruct();
}
void InfoBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InfoBody::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.InfoBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  _impl_.versions_.Clear();
  _impl_.app_.ClearToEmpty();
  _impl_.arch_.ClearToEmpty();
  _impl_.cpumodel_.ClearToEmpty();
  _impl_.execpath_.ClearToEmpty();
  _impl_.hostname_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.main_.ClearToEmpty();
  _impl_.nodeenv_.ClearToEmpty();
  _impl_.platform_.ClearToEmpty();
  ::memset(&_impl_.cpucores_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.totalmem_) -
      reinterpret_cast<char*>(&_impl_.cpucores_)) + sizeof(_impl_.totalmem_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InfoBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string app = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_app();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.app"));
        } else
          goto handle_unusual;
        continue;
      // string arch = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_arch();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.arch"));
        } else
          goto handle_unusual;
        continue;
      // int32 cpuCores = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.cpucores_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string cpuModel = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_cpumodel();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.cpuModel"));
        } else
          goto handle_unusual;
        continue;
      // string execPath = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_execpath();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.execPath"));
        } else
          goto handle_unusual;
        continue;
      // string hostname = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_hostname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.hostname"));
        } else
          goto handle_unusual;
        continue;
      // string id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.id"));
        } else
          goto handle_unusual;
        continue;
      // string main = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_main();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.main"));
        } else
          goto handle_unusual;
        continue;
      // string nodeEnv = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_nodeenv();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.nodeEnv"));
        } else
          goto handle_unusual;
        continue;
      // int32 pid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.pid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string platform = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          auto str = _internal_mutable_platform();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.platform"));
        } else
          goto handle_unusual;
        continue;
      // int64 processStart = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.processstart_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string tags = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 106)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "grpcagent.InfoBody.tags"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<106>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 totalMem = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.totalmem_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // map<string, string> versions = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 122)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.versions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<122>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InfoBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.InfoBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string app = 1;
  if (!this->_internal_app().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_app().data(), static_cast<int>(this->_internal_app().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.app");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_app(), target);
  }

  // string arch = 2;
  if (!this->_internal_arch().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arch().data(), static_cast<int>(this->_internal_arch().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.arch");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_arch(), target);
  }

  // int32 cpuCores = 3;
  if (this->_internal_cpucores() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_cpucores(), target);
  }

  // string cpuModel = 4;
  if (!this->_internal_cpumodel().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cpumodel().data(), static_cast<int>(this->_internal_cpumodel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.cpuModel");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_cpumodel(), target);
  }

  // string execPath = 5;
  if (!this->_internal_execpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_execpath().data(), static_cast<int>(this->_internal_execpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.execPath");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_execpath(), target);
  }

  // string hostname = 6;
  if (!this->_internal_hostname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_hostname().data(), static_cast<int>(this->_internal_hostname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.hostname");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_hostname(), target);
  }

  // string id = 7;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.id");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_id(), target);
  }

  // string main = 8;
  if (!this->_internal_main().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_main().data(), static_cast<int>(this->_internal_main().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.main");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_main(), target);
  }

  // string nodeEnv = 9;
  if (!this->_internal_nodeenv().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nodeenv().data(), static_cast<int>(this->_internal_nodeenv().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.nodeEnv");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_nodeenv(), target);
  }

  // int32 pid = 10;
  if (this->_internal_pid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_pid(), target);
  }

  // string platform = 11;
  if (!this->_internal_platform().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_platform().data(), static_cast<int>(this->_internal_platform().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.platform");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_platform(), target);
  }

  // int64 processStart = 12;
  if (this->_internal_processstart() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(12, this->_internal_processstart(), target);
  }

  // repeated string tags = 13;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.InfoBody.tags");
    target = stream->WriteString(13, s, target);
  }

  // int64 totalMem = 14;
  if (this->_internal_totalmem() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(14, this->_internal_totalmem(), target);
  }

  // map<string, string> versions = 15;
  if (!this->_internal_versions().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = InfoBody_VersionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_versions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "grpcagent.InfoBody.VersionsEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "grpcagent.InfoBody.VersionsEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(15, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(15, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.InfoBody)
  return target;
}

size_t InfoBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.InfoBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 13;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.tags_.size());
  for (int i = 0, n = _impl_.tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.tags_.Get(i));
  }

  // map<string, string> versions = 15;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_versions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_versions().begin();
      it != this->_internal_versions().end(); ++it) {
    total_size += InfoBody_VersionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string app = 1;
  if (!this->_internal_app().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_app());
  }

  // string arch = 2;
  if (!this->_internal_arch().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arch());
  }

  // string cpuModel = 4;
  if (!this->_internal_cpumodel().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cpumodel());
  }

  // string execPath = 5;
  if (!this->_internal_execpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_execpath());
  }

  // string hostname = 6;
  if (!this->_internal_hostname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_hostname());
  }

  // string id = 7;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string main = 8;
  if (!this->_internal_main().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_main());
  }

  // string nodeEnv = 9;
  if (!this->_internal_nodeenv().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nodeenv());
  }

  // string platform = 11;
  if (!this->_internal_platform().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_platform());
  }

  // int32 cpuCores = 3;
  if (this->_internal_cpucores() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_cpucores());
  }

  // int32 pid = 10;
  if (this->_internal_pid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_pid());
  }

  // int64 processStart = 12;
  if (this->_internal_processstart() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_processstart());
  }

  // int64 totalMem = 14;
  if (this->_internal_totalmem() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_totalmem());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InfoBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InfoBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InfoBody::GetClassData() const { return &_class_data_; }


void InfoBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InfoBody*>(&to_msg);
  auto& from = static_cast<const InfoBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.InfoBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  _this->_impl_.versions_.MergeFrom(from._impl_.versions_);
  if (!from._internal_app().empty()) {
    _this->_internal_set_app(from._internal_app());
  }
  if (!from._internal_arch().empty()) {
    _this->_internal_set_arch(from._internal_arch());
  }
  if (!from._internal_cpumodel().empty()) {
    _this->_internal_set_cpumodel(from._internal_cpumodel());
  }
  if (!from._internal_execpath().empty()) {
    _this->_internal_set_execpath(from._internal_execpath());
  }
  if (!from._internal_hostname().empty()) {
    _this->_internal_set_hostname(from._internal_hostname());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_main().empty()) {
    _this->_internal_set_main(from._internal_main());
  }
  if (!from._internal_nodeenv().empty()) {
    _this->_internal_set_nodeenv(from._internal_nodeenv());
  }
  if (!from._internal_platform().empty()) {
    _this->_internal_set_platform(from._internal_platform());
  }
  if (from._internal_cpucores() != 0) {
    _this->_internal_set_cpucores(from._internal_cpucores());
  }
  if (from._internal_pid() != 0) {
    _this->_internal_set_pid(from._internal_pid());
  }
  if (from._internal_processstart() != 0) {
    _this->_internal_set_processstart(from._internal_processstart());
  }
  if (from._internal_totalmem() != 0) {
    _this->_internal_set_totalmem(from._internal_totalmem());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InfoBody::CopyFrom(const InfoBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.InfoBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoBody::IsInitialized() const {
  return true;
}

void InfoBody::InternalSwap(InfoBody* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  _impl_.versions_.InternalSwap(&other->_impl_.versions_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.app_, lhs_arena,
      &other->_impl_.app_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.arch_, lhs_arena,
      &other->_impl_.arch_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.cpumodel_, lhs_arena,
      &other->_impl_.cpumodel_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.execpath_, lhs_arena,
      &other->_impl_.execpath_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.hostname_, lhs_arena,
      &other->_impl_.hostname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.main_, lhs_arena,
      &other->_impl_.main_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nodeenv_, lhs_arena,
      &other->_impl_.nodeenv_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.platform_, lhs_arena,
      &other->_impl_.platform_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InfoBody, _impl_.totalmem_)
      + sizeof(InfoBody::_impl_.totalmem_)
      - PROTOBUF_FIELD_OFFSET(InfoBody, _impl_.cpucores_)>(
          reinterpret_cast<char*>(&_impl_.cpucores_),
          reinterpret_cast<char*>(&other->_impl_.cpucores_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InfoBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[5]);
}

// ===================================================================

class InfoResponse::_Internal {
 public:
  static const ::grpcagent::CommonResponse& common(const InfoResponse* msg);
  static const ::grpcagent::InfoBody& body(const InfoResponse* msg);
};

const ::grpcagent::CommonResponse&
InfoResponse::_Internal::common(const InfoResponse* msg) {
  return *msg->_impl_.common_;
}
const ::grpcagent::InfoBody&
InfoResponse::_Internal::body(const InfoResponse* msg) {
  return *msg->_impl_.body_;
}
InfoResponse::InfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.InfoResponse)
}
InfoResponse::InfoResponse(const InfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  InfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    _this->_impl_.common_ = new ::grpcagent::CommonResponse(*from._impl_.common_);
  }
  if (from._internal_has_body()) {
    _this->_impl_.body_ = new ::grpcagent::InfoBody(*from._impl_.body_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.InfoResponse)
}

inline void InfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

InfoResponse::~InfoResponse() {
  // @@protoc_insertion_point(destructor:grpcagent.InfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.common_;
  if (this != internal_default_instance()) delete _impl_.body_;
}

void InfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void InfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.InfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.CommonResponse common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.InfoBody body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.InfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::common(this),
        _Internal::common(this).GetCachedSize(), target, stream);
  }

  // .grpcagent.InfoBody body = 2;
  if (this->_internal_has_body()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.InfoResponse)
  return target;
}

size_t InfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.InfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.common_);
  }

  // .grpcagent.InfoBody body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    InfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InfoResponse::GetClassData() const { return &_class_data_; }


void InfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<InfoResponse*>(&to_msg);
  auto& from = static_cast<const InfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.InfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_common()) {
    _this->_internal_mutable_common()->::grpcagent::CommonResponse::MergeFrom(
        from._internal_common());
  }
  if (from._internal_has_body()) {
    _this->_internal_mutable_body()->::grpcagent::InfoBody::MergeFrom(
        from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InfoResponse::CopyFrom(const InfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.InfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InfoResponse::IsInitialized() const {
  return true;
}

void InfoResponse::InternalSwap(InfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InfoResponse, _impl_.body_)
      + sizeof(InfoResponse::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(InfoResponse, _impl_.common_)>(
          reinterpret_cast<char*>(&_impl_.common_),
          reinterpret_cast<char*>(&other->_impl_.common_));
}

::PROTOBUF_NAMESPACE_ID::Metadata InfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[6]);
}

// ===================================================================

class PackagesResponse::_Internal {
 public:
  static const ::grpcagent::CommonResponse& common(const PackagesResponse* msg);
  static const ::grpcagent::PackagesBody& body(const PackagesResponse* msg);
};

const ::grpcagent::CommonResponse&
PackagesResponse::_Internal::common(const PackagesResponse* msg) {
  return *msg->_impl_.common_;
}
const ::grpcagent::PackagesBody&
PackagesResponse::_Internal::body(const PackagesResponse* msg) {
  return *msg->_impl_.body_;
}
PackagesResponse::PackagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.PackagesResponse)
}
PackagesResponse::PackagesResponse(const PackagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PackagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    _this->_impl_.common_ = new ::grpcagent::CommonResponse(*from._impl_.common_);
  }
  if (from._internal_has_body()) {
    _this->_impl_.body_ = new ::grpcagent::PackagesBody(*from._impl_.body_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.PackagesResponse)
}

inline void PackagesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PackagesResponse::~PackagesResponse() {
  // @@protoc_insertion_point(destructor:grpcagent.PackagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PackagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.common_;
  if (this != internal_default_instance()) delete _impl_.body_;
}

void PackagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PackagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.PackagesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.CommonResponse common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.PackagesBody body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PackagesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.PackagesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::common(this),
        _Internal::common(this).GetCachedSize(), target, stream);
  }

  // .grpcagent.PackagesBody body = 2;
  if (this->_internal_has_body()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.PackagesResponse)
  return target;
}

size_t PackagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.PackagesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.common_);
  }

  // .grpcagent.PackagesBody body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PackagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PackagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PackagesResponse::GetClassData() const { return &_class_data_; }


void PackagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PackagesResponse*>(&to_msg);
  auto& from = static_cast<const PackagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.PackagesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_common()) {
    _this->_internal_mutable_common()->::grpcagent::CommonResponse::MergeFrom(
        from._internal_common());
  }
  if (from._internal_has_body()) {
    _this->_internal_mutable_body()->::grpcagent::PackagesBody::MergeFrom(
        from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PackagesResponse::CopyFrom(const PackagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.PackagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackagesResponse::IsInitialized() const {
  return true;
}

void PackagesResponse::InternalSwap(PackagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PackagesResponse, _impl_.body_)
      + sizeof(PackagesResponse::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(PackagesResponse, _impl_.common_)>(
          reinterpret_cast<char*>(&_impl_.common_),
          reinterpret_cast<char*>(&other->_impl_.common_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PackagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[7]);
}

// ===================================================================

class PackagesBody::_Internal {
 public:
};

PackagesBody::PackagesBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.PackagesBody)
}
PackagesBody::PackagesBody(const PackagesBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PackagesBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.packages_){from._impl_.packages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpcagent.PackagesBody)
}

inline void PackagesBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.packages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

PackagesBody::~PackagesBody() {
  // @@protoc_insertion_point(destructor:grpcagent.PackagesBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PackagesBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.packages_.~RepeatedPtrField();
}

void PackagesBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PackagesBody::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.PackagesBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.packages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PackagesBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .grpcagent.Package packages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_packages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PackagesBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.PackagesBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpcagent.Package packages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_packages_size()); i < n; i++) {
    const auto& repfield = this->_internal_packages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.PackagesBody)
  return target;
}

size_t PackagesBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.PackagesBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpcagent.Package packages = 1;
  total_size += 1UL * this->_internal_packages_size();
  for (const auto& msg : this->_impl_.packages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PackagesBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PackagesBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PackagesBody::GetClassData() const { return &_class_data_; }


void PackagesBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PackagesBody*>(&to_msg);
  auto& from = static_cast<const PackagesBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.PackagesBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.packages_.MergeFrom(from._impl_.packages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PackagesBody::CopyFrom(const PackagesBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.PackagesBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PackagesBody::IsInitialized() const {
  return true;
}

void PackagesBody::InternalSwap(PackagesBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.packages_.InternalSwap(&other->_impl_.packages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PackagesBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[8]);
}

// ===================================================================

class Package::_Internal {
 public:
};

Package::Package(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.Package)
}
Package::Package(const Package& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Package* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dependencies_){from._impl_.dependencies_}
    , decltype(_impl_.path_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.main_){}
    , decltype(_impl_.required_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_path().empty()) {
    _this->_impl_.path_.Set(from._internal_path(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_version().empty()) {
    _this->_impl_.version_.Set(from._internal_version(), 
      _this->GetArenaForAllocation());
  }
  _impl_.main_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.main_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_main().empty()) {
    _this->_impl_.main_.Set(from._internal_main(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.required_ = from._impl_.required_;
  // @@protoc_insertion_point(copy_constructor:grpcagent.Package)
}

inline void Package::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dependencies_){arena}
    , decltype(_impl_.path_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.version_){}
    , decltype(_impl_.main_){}
    , decltype(_impl_.required_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.path_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.path_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.version_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.version_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.main_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.main_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Package::~Package() {
  // @@protoc_insertion_point(destructor:grpcagent.Package)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Package::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dependencies_.~RepeatedPtrField();
  _impl_.path_.Destroy();
  _impl_.name_.Destroy();
  _impl_.version_.Destroy();
  _impl_.main_.Destroy();
}

void Package::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Package::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.Package)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dependencies_.Clear();
  _impl_.path_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.version_.ClearToEmpty();
  _impl_.main_.ClearToEmpty();
  _impl_.required_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Package::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.Package.path"));
        } else
          goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.Package.name"));
        } else
          goto handle_unusual;
        continue;
      // string version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.Package.version"));
        } else
          goto handle_unusual;
        continue;
      // string main = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_main();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.Package.main"));
        } else
          goto handle_unusual;
        continue;
      // repeated string dependencies = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_dependencies();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "grpcagent.Package.dependencies"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      // bool required = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.required_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Package::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.Package)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.Package.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.Package.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string version = 3;
  if (!this->_internal_version().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.Package.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // string main = 4;
  if (!this->_internal_main().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_main().data(), static_cast<int>(this->_internal_main().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.Package.main");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_main(), target);
  }

  // repeated string dependencies = 5;
  for (int i = 0, n = this->_internal_dependencies_size(); i < n; i++) {
    const auto& s = this->_internal_dependencies(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.Package.dependencies");
    target = stream->WriteString(5, s, target);
  }

  // bool required = 6;
  if (this->_internal_required() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(6, this->_internal_required(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.Package)
  return target;
}

size_t Package::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.Package)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string dependencies = 5;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.dependencies_.size());
  for (int i = 0, n = _impl_.dependencies_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.dependencies_.Get(i));
  }

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // string name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string version = 3;
  if (!this->_internal_version().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string main = 4;
  if (!this->_internal_main().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_main());
  }

  // bool required = 6;
  if (this->_internal_required() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Package::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Package::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Package::GetClassData() const { return &_class_data_; }


void Package::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Package*>(&to_msg);
  auto& from = static_cast<const Package&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.Package)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dependencies_.MergeFrom(from._impl_.dependencies_);
  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_version().empty()) {
    _this->_internal_set_version(from._internal_version());
  }
  if (!from._internal_main().empty()) {
    _this->_internal_set_main(from._internal_main());
  }
  if (from._internal_required() != 0) {
    _this->_internal_set_required(from._internal_required());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Package::CopyFrom(const Package& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.Package)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Package::IsInitialized() const {
  return true;
}

void Package::InternalSwap(Package* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dependencies_.InternalSwap(&other->_impl_.dependencies_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.path_, lhs_arena,
      &other->_impl_.path_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.version_, lhs_arena,
      &other->_impl_.version_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.main_, lhs_arena,
      &other->_impl_.main_, rhs_arena
  );
  swap(_impl_.required_, other->_impl_.required_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Package::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_nsolid_2eproto_getter, &descriptor_table_nsolid_2eproto_once,
      file_level_metadata_nsolid_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcagent
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcagent::RuntimeRequest*
Arena::CreateMaybeMessage< ::grpcagent::RuntimeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::RuntimeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::RuntimeResponse*
Arena::CreateMaybeMessage< ::grpcagent::RuntimeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::RuntimeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::Time*
Arena::CreateMaybeMessage< ::grpcagent::Time >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::Time >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::CommonResponse*
Arena::CreateMaybeMessage< ::grpcagent::CommonResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::CommonResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::InfoBody_VersionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::grpcagent::InfoBody_VersionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::InfoBody_VersionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::InfoBody*
Arena::CreateMaybeMessage< ::grpcagent::InfoBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::InfoBody >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::InfoResponse*
Arena::CreateMaybeMessage< ::grpcagent::InfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::InfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::PackagesResponse*
Arena::CreateMaybeMessage< ::grpcagent::PackagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::PackagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::PackagesBody*
Arena::CreateMaybeMessage< ::grpcagent::PackagesBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::PackagesBody >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::Package*
Arena::CreateMaybeMessage< ::grpcagent::Package >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::Package >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
