// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blocked_loop.proto

#include "blocked_loop.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcagent {
PROTOBUF_CONSTEXPR Stack::Stack(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.script_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.function_name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.is_eval_)*/false
  , /*decltype(_impl_.line_number_)*/0
  , /*decltype(_impl_.column_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StackDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StackDefaultTypeInternal() {}
  union {
    Stack _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StackDefaultTypeInternal _Stack_default_instance_;
PROTOBUF_CONSTEXPR BlockedLoopBody::BlockedLoopBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.stack_)*/{}
  , /*decltype(_impl_.blocked_for_)*/0
  , /*decltype(_impl_.loop_id_)*/0
  , /*decltype(_impl_.callback_cntr_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlockedLoopBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockedLoopBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockedLoopBodyDefaultTypeInternal() {}
  union {
    BlockedLoopBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockedLoopBodyDefaultTypeInternal _BlockedLoopBody_default_instance_;
PROTOBUF_CONSTEXPR BlockedLoopEvent::BlockedLoopEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.common_)*/nullptr
  , /*decltype(_impl_.body_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BlockedLoopEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BlockedLoopEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BlockedLoopEventDefaultTypeInternal() {}
  union {
    BlockedLoopEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BlockedLoopEventDefaultTypeInternal _BlockedLoopEvent_default_instance_;
PROTOBUF_CONSTEXPR UnblockedLoopBody::UnblockedLoopBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.blocked_for_)*/0
  , /*decltype(_impl_.loop_id_)*/0
  , /*decltype(_impl_.callback_cntr_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnblockedLoopBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnblockedLoopBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnblockedLoopBodyDefaultTypeInternal() {}
  union {
    UnblockedLoopBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnblockedLoopBodyDefaultTypeInternal _UnblockedLoopBody_default_instance_;
PROTOBUF_CONSTEXPR UnblockedLoopEvent::UnblockedLoopEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.common_)*/nullptr
  , /*decltype(_impl_.body_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UnblockedLoopEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnblockedLoopEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnblockedLoopEventDefaultTypeInternal() {}
  union {
    UnblockedLoopEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnblockedLoopEventDefaultTypeInternal _UnblockedLoopEvent_default_instance_;
}  // namespace grpcagent
static ::_pb::Metadata file_level_metadata_blocked_5floop_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_blocked_5floop_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_blocked_5floop_2eproto = nullptr;

const uint32_t TableStruct_blocked_5floop_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::Stack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::Stack, _impl_.is_eval_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Stack, _impl_.script_name_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Stack, _impl_.function_name_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Stack, _impl_.line_number_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::Stack, _impl_.column_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopBody, _impl_.blocked_for_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopBody, _impl_.loop_id_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopBody, _impl_.callback_cntr_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopBody, _impl_.stack_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopEvent, _impl_.common_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::BlockedLoopEvent, _impl_.body_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::UnblockedLoopBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::UnblockedLoopBody, _impl_.blocked_for_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::UnblockedLoopBody, _impl_.loop_id_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::UnblockedLoopBody, _impl_.callback_cntr_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::UnblockedLoopEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::UnblockedLoopEvent, _impl_.common_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::UnblockedLoopEvent, _impl_.body_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcagent::Stack)},
  { 11, -1, -1, sizeof(::grpcagent::BlockedLoopBody)},
  { 21, -1, -1, sizeof(::grpcagent::BlockedLoopEvent)},
  { 29, -1, -1, sizeof(::grpcagent::UnblockedLoopBody)},
  { 38, -1, -1, sizeof(::grpcagent::UnblockedLoopEvent)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcagent::_Stack_default_instance_._instance,
  &::grpcagent::_BlockedLoopBody_default_instance_._instance,
  &::grpcagent::_BlockedLoopEvent_default_instance_._instance,
  &::grpcagent::_UnblockedLoopBody_default_instance_._instance,
  &::grpcagent::_UnblockedLoopEvent_default_instance_._instance,
};

const char descriptor_table_protodef_blocked_5floop_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022blocked_loop.proto\022\tgrpcagent\032\014common."
  "proto\"i\n\005Stack\022\017\n\007is_eval\030\001 \001(\010\022\023\n\013scrip"
  "t_name\030\002 \001(\t\022\025\n\rfunction_name\030\003 \001(\t\022\023\n\013l"
  "ine_number\030\004 \001(\005\022\016\n\006column\030\005 \001(\005\"o\n\017Bloc"
  "kedLoopBody\022\023\n\013blocked_for\030\001 \001(\005\022\017\n\007loop"
  "_id\030\002 \001(\005\022\025\n\rcallback_cntr\030\003 \001(\005\022\037\n\005stac"
  "k\030\004 \003(\0132\020.grpcagent.Stack\"g\n\020BlockedLoop"
  "Event\022)\n\006common\030\001 \001(\0132\031.grpcagent.Common"
  "Response\022(\n\004body\030\002 \001(\0132\032.grpcagent.Block"
  "edLoopBody\"P\n\021UnblockedLoopBody\022\023\n\013block"
  "ed_for\030\001 \001(\005\022\017\n\007loop_id\030\002 \001(\005\022\025\n\rcallbac"
  "k_cntr\030\003 \001(\005\"k\n\022UnblockedLoopEvent\022)\n\006co"
  "mmon\030\001 \001(\0132\031.grpcagent.CommonResponse\022*\n"
  "\004body\030\002 \001(\0132\034.grpcagent.UnblockedLoopBod"
  "yb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_blocked_5floop_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::_pbi::once_flag descriptor_table_blocked_5floop_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_blocked_5floop_2eproto = {
    false, false, 569, descriptor_table_protodef_blocked_5floop_2eproto,
    "blocked_loop.proto",
    &descriptor_table_blocked_5floop_2eproto_once, descriptor_table_blocked_5floop_2eproto_deps, 1, 5,
    schemas, file_default_instances, TableStruct_blocked_5floop_2eproto::offsets,
    file_level_metadata_blocked_5floop_2eproto, file_level_enum_descriptors_blocked_5floop_2eproto,
    file_level_service_descriptors_blocked_5floop_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_blocked_5floop_2eproto_getter() {
  return &descriptor_table_blocked_5floop_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_blocked_5floop_2eproto(&descriptor_table_blocked_5floop_2eproto);
namespace grpcagent {

// ===================================================================

class Stack::_Internal {
 public:
};

Stack::Stack(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.Stack)
}
Stack::Stack(const Stack& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Stack* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.script_name_){}
    , decltype(_impl_.function_name_){}
    , decltype(_impl_.is_eval_){}
    , decltype(_impl_.line_number_){}
    , decltype(_impl_.column_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.script_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_script_name().empty()) {
    _this->_impl_.script_name_.Set(from._internal_script_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_function_name().empty()) {
    _this->_impl_.function_name_.Set(from._internal_function_name(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.is_eval_, &from._impl_.is_eval_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.column_) -
    reinterpret_cast<char*>(&_impl_.is_eval_)) + sizeof(_impl_.column_));
  // @@protoc_insertion_point(copy_constructor:grpcagent.Stack)
}

inline void Stack::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.script_name_){}
    , decltype(_impl_.function_name_){}
    , decltype(_impl_.is_eval_){false}
    , decltype(_impl_.line_number_){0}
    , decltype(_impl_.column_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.script_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.script_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.function_name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.function_name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Stack::~Stack() {
  // @@protoc_insertion_point(destructor:grpcagent.Stack)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Stack::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.script_name_.Destroy();
  _impl_.function_name_.Destroy();
}

void Stack::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Stack::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.Stack)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.script_name_.ClearToEmpty();
  _impl_.function_name_.ClearToEmpty();
  ::memset(&_impl_.is_eval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.column_) -
      reinterpret_cast<char*>(&_impl_.is_eval_)) + sizeof(_impl_.column_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Stack::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool is_eval = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.is_eval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string script_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_script_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.Stack.script_name"));
        } else
          goto handle_unusual;
        continue;
      // string function_name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_function_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.Stack.function_name"));
        } else
          goto handle_unusual;
        continue;
      // int32 line_number = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.line_number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 column = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Stack::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.Stack)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_eval = 1;
  if (this->_internal_is_eval() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_is_eval(), target);
  }

  // string script_name = 2;
  if (!this->_internal_script_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_script_name().data(), static_cast<int>(this->_internal_script_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.Stack.script_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_script_name(), target);
  }

  // string function_name = 3;
  if (!this->_internal_function_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_function_name().data(), static_cast<int>(this->_internal_function_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.Stack.function_name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_function_name(), target);
  }

  // int32 line_number = 4;
  if (this->_internal_line_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(4, this->_internal_line_number(), target);
  }

  // int32 column = 5;
  if (this->_internal_column() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_column(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.Stack)
  return target;
}

size_t Stack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.Stack)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string script_name = 2;
  if (!this->_internal_script_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_script_name());
  }

  // string function_name = 3;
  if (!this->_internal_function_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_function_name());
  }

  // bool is_eval = 1;
  if (this->_internal_is_eval() != 0) {
    total_size += 1 + 1;
  }

  // int32 line_number = 4;
  if (this->_internal_line_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_line_number());
  }

  // int32 column = 5;
  if (this->_internal_column() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_column());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Stack::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Stack::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Stack::GetClassData() const { return &_class_data_; }


void Stack::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Stack*>(&to_msg);
  auto& from = static_cast<const Stack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.Stack)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_script_name().empty()) {
    _this->_internal_set_script_name(from._internal_script_name());
  }
  if (!from._internal_function_name().empty()) {
    _this->_internal_set_function_name(from._internal_function_name());
  }
  if (from._internal_is_eval() != 0) {
    _this->_internal_set_is_eval(from._internal_is_eval());
  }
  if (from._internal_line_number() != 0) {
    _this->_internal_set_line_number(from._internal_line_number());
  }
  if (from._internal_column() != 0) {
    _this->_internal_set_column(from._internal_column());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Stack::CopyFrom(const Stack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.Stack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stack::IsInitialized() const {
  return true;
}

void Stack::InternalSwap(Stack* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.script_name_, lhs_arena,
      &other->_impl_.script_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.function_name_, lhs_arena,
      &other->_impl_.function_name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Stack, _impl_.column_)
      + sizeof(Stack::_impl_.column_)
      - PROTOBUF_FIELD_OFFSET(Stack, _impl_.is_eval_)>(
          reinterpret_cast<char*>(&_impl_.is_eval_),
          reinterpret_cast<char*>(&other->_impl_.is_eval_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Stack::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_blocked_5floop_2eproto_getter, &descriptor_table_blocked_5floop_2eproto_once,
      file_level_metadata_blocked_5floop_2eproto[0]);
}

// ===================================================================

class BlockedLoopBody::_Internal {
 public:
};

BlockedLoopBody::BlockedLoopBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.BlockedLoopBody)
}
BlockedLoopBody::BlockedLoopBody(const BlockedLoopBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlockedLoopBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.stack_){from._impl_.stack_}
    , decltype(_impl_.blocked_for_){}
    , decltype(_impl_.loop_id_){}
    , decltype(_impl_.callback_cntr_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.blocked_for_, &from._impl_.blocked_for_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.callback_cntr_) -
    reinterpret_cast<char*>(&_impl_.blocked_for_)) + sizeof(_impl_.callback_cntr_));
  // @@protoc_insertion_point(copy_constructor:grpcagent.BlockedLoopBody)
}

inline void BlockedLoopBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.stack_){arena}
    , decltype(_impl_.blocked_for_){0}
    , decltype(_impl_.loop_id_){0}
    , decltype(_impl_.callback_cntr_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BlockedLoopBody::~BlockedLoopBody() {
  // @@protoc_insertion_point(destructor:grpcagent.BlockedLoopBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockedLoopBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.stack_.~RepeatedPtrField();
}

void BlockedLoopBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockedLoopBody::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.BlockedLoopBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stack_.Clear();
  ::memset(&_impl_.blocked_for_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.callback_cntr_) -
      reinterpret_cast<char*>(&_impl_.blocked_for_)) + sizeof(_impl_.callback_cntr_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockedLoopBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 blocked_for = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.blocked_for_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 loop_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.loop_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 callback_cntr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.callback_cntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .grpcagent.Stack stack = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_stack(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlockedLoopBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.BlockedLoopBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 blocked_for = 1;
  if (this->_internal_blocked_for() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_blocked_for(), target);
  }

  // int32 loop_id = 2;
  if (this->_internal_loop_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_loop_id(), target);
  }

  // int32 callback_cntr = 3;
  if (this->_internal_callback_cntr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_callback_cntr(), target);
  }

  // repeated .grpcagent.Stack stack = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_stack_size()); i < n; i++) {
    const auto& repfield = this->_internal_stack(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.BlockedLoopBody)
  return target;
}

size_t BlockedLoopBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.BlockedLoopBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .grpcagent.Stack stack = 4;
  total_size += 1UL * this->_internal_stack_size();
  for (const auto& msg : this->_impl_.stack_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 blocked_for = 1;
  if (this->_internal_blocked_for() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_blocked_for());
  }

  // int32 loop_id = 2;
  if (this->_internal_loop_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_loop_id());
  }

  // int32 callback_cntr = 3;
  if (this->_internal_callback_cntr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_callback_cntr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockedLoopBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockedLoopBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockedLoopBody::GetClassData() const { return &_class_data_; }


void BlockedLoopBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockedLoopBody*>(&to_msg);
  auto& from = static_cast<const BlockedLoopBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.BlockedLoopBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.stack_.MergeFrom(from._impl_.stack_);
  if (from._internal_blocked_for() != 0) {
    _this->_internal_set_blocked_for(from._internal_blocked_for());
  }
  if (from._internal_loop_id() != 0) {
    _this->_internal_set_loop_id(from._internal_loop_id());
  }
  if (from._internal_callback_cntr() != 0) {
    _this->_internal_set_callback_cntr(from._internal_callback_cntr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockedLoopBody::CopyFrom(const BlockedLoopBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.BlockedLoopBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockedLoopBody::IsInitialized() const {
  return true;
}

void BlockedLoopBody::InternalSwap(BlockedLoopBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.stack_.InternalSwap(&other->_impl_.stack_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockedLoopBody, _impl_.callback_cntr_)
      + sizeof(BlockedLoopBody::_impl_.callback_cntr_)
      - PROTOBUF_FIELD_OFFSET(BlockedLoopBody, _impl_.blocked_for_)>(
          reinterpret_cast<char*>(&_impl_.blocked_for_),
          reinterpret_cast<char*>(&other->_impl_.blocked_for_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockedLoopBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_blocked_5floop_2eproto_getter, &descriptor_table_blocked_5floop_2eproto_once,
      file_level_metadata_blocked_5floop_2eproto[1]);
}

// ===================================================================

class BlockedLoopEvent::_Internal {
 public:
  static const ::grpcagent::CommonResponse& common(const BlockedLoopEvent* msg);
  static const ::grpcagent::BlockedLoopBody& body(const BlockedLoopEvent* msg);
};

const ::grpcagent::CommonResponse&
BlockedLoopEvent::_Internal::common(const BlockedLoopEvent* msg) {
  return *msg->_impl_.common_;
}
const ::grpcagent::BlockedLoopBody&
BlockedLoopEvent::_Internal::body(const BlockedLoopEvent* msg) {
  return *msg->_impl_.body_;
}
void BlockedLoopEvent::clear_common() {
  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
}
BlockedLoopEvent::BlockedLoopEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.BlockedLoopEvent)
}
BlockedLoopEvent::BlockedLoopEvent(const BlockedLoopEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BlockedLoopEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    _this->_impl_.common_ = new ::grpcagent::CommonResponse(*from._impl_.common_);
  }
  if (from._internal_has_body()) {
    _this->_impl_.body_ = new ::grpcagent::BlockedLoopBody(*from._impl_.body_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.BlockedLoopEvent)
}

inline void BlockedLoopEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BlockedLoopEvent::~BlockedLoopEvent() {
  // @@protoc_insertion_point(destructor:grpcagent.BlockedLoopEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BlockedLoopEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.common_;
  if (this != internal_default_instance()) delete _impl_.body_;
}

void BlockedLoopEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BlockedLoopEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.BlockedLoopEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BlockedLoopEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.CommonResponse common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.BlockedLoopBody body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BlockedLoopEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.BlockedLoopEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::common(this),
        _Internal::common(this).GetCachedSize(), target, stream);
  }

  // .grpcagent.BlockedLoopBody body = 2;
  if (this->_internal_has_body()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.BlockedLoopEvent)
  return target;
}

size_t BlockedLoopEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.BlockedLoopEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.common_);
  }

  // .grpcagent.BlockedLoopBody body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BlockedLoopEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BlockedLoopEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BlockedLoopEvent::GetClassData() const { return &_class_data_; }


void BlockedLoopEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BlockedLoopEvent*>(&to_msg);
  auto& from = static_cast<const BlockedLoopEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.BlockedLoopEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_common()) {
    _this->_internal_mutable_common()->::grpcagent::CommonResponse::MergeFrom(
        from._internal_common());
  }
  if (from._internal_has_body()) {
    _this->_internal_mutable_body()->::grpcagent::BlockedLoopBody::MergeFrom(
        from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BlockedLoopEvent::CopyFrom(const BlockedLoopEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.BlockedLoopEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockedLoopEvent::IsInitialized() const {
  return true;
}

void BlockedLoopEvent::InternalSwap(BlockedLoopEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BlockedLoopEvent, _impl_.body_)
      + sizeof(BlockedLoopEvent::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(BlockedLoopEvent, _impl_.common_)>(
          reinterpret_cast<char*>(&_impl_.common_),
          reinterpret_cast<char*>(&other->_impl_.common_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BlockedLoopEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_blocked_5floop_2eproto_getter, &descriptor_table_blocked_5floop_2eproto_once,
      file_level_metadata_blocked_5floop_2eproto[2]);
}

// ===================================================================

class UnblockedLoopBody::_Internal {
 public:
};

UnblockedLoopBody::UnblockedLoopBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.UnblockedLoopBody)
}
UnblockedLoopBody::UnblockedLoopBody(const UnblockedLoopBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnblockedLoopBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.blocked_for_){}
    , decltype(_impl_.loop_id_){}
    , decltype(_impl_.callback_cntr_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.blocked_for_, &from._impl_.blocked_for_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.callback_cntr_) -
    reinterpret_cast<char*>(&_impl_.blocked_for_)) + sizeof(_impl_.callback_cntr_));
  // @@protoc_insertion_point(copy_constructor:grpcagent.UnblockedLoopBody)
}

inline void UnblockedLoopBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.blocked_for_){0}
    , decltype(_impl_.loop_id_){0}
    , decltype(_impl_.callback_cntr_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnblockedLoopBody::~UnblockedLoopBody() {
  // @@protoc_insertion_point(destructor:grpcagent.UnblockedLoopBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnblockedLoopBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void UnblockedLoopBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnblockedLoopBody::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.UnblockedLoopBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.blocked_for_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.callback_cntr_) -
      reinterpret_cast<char*>(&_impl_.blocked_for_)) + sizeof(_impl_.callback_cntr_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnblockedLoopBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 blocked_for = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.blocked_for_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 loop_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.loop_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 callback_cntr = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.callback_cntr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnblockedLoopBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.UnblockedLoopBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 blocked_for = 1;
  if (this->_internal_blocked_for() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_blocked_for(), target);
  }

  // int32 loop_id = 2;
  if (this->_internal_loop_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_loop_id(), target);
  }

  // int32 callback_cntr = 3;
  if (this->_internal_callback_cntr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_callback_cntr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.UnblockedLoopBody)
  return target;
}

size_t UnblockedLoopBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.UnblockedLoopBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 blocked_for = 1;
  if (this->_internal_blocked_for() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_blocked_for());
  }

  // int32 loop_id = 2;
  if (this->_internal_loop_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_loop_id());
  }

  // int32 callback_cntr = 3;
  if (this->_internal_callback_cntr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_callback_cntr());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnblockedLoopBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnblockedLoopBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnblockedLoopBody::GetClassData() const { return &_class_data_; }


void UnblockedLoopBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnblockedLoopBody*>(&to_msg);
  auto& from = static_cast<const UnblockedLoopBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.UnblockedLoopBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_blocked_for() != 0) {
    _this->_internal_set_blocked_for(from._internal_blocked_for());
  }
  if (from._internal_loop_id() != 0) {
    _this->_internal_set_loop_id(from._internal_loop_id());
  }
  if (from._internal_callback_cntr() != 0) {
    _this->_internal_set_callback_cntr(from._internal_callback_cntr());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnblockedLoopBody::CopyFrom(const UnblockedLoopBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.UnblockedLoopBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnblockedLoopBody::IsInitialized() const {
  return true;
}

void UnblockedLoopBody::InternalSwap(UnblockedLoopBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnblockedLoopBody, _impl_.callback_cntr_)
      + sizeof(UnblockedLoopBody::_impl_.callback_cntr_)
      - PROTOBUF_FIELD_OFFSET(UnblockedLoopBody, _impl_.blocked_for_)>(
          reinterpret_cast<char*>(&_impl_.blocked_for_),
          reinterpret_cast<char*>(&other->_impl_.blocked_for_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnblockedLoopBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_blocked_5floop_2eproto_getter, &descriptor_table_blocked_5floop_2eproto_once,
      file_level_metadata_blocked_5floop_2eproto[3]);
}

// ===================================================================

class UnblockedLoopEvent::_Internal {
 public:
  static const ::grpcagent::CommonResponse& common(const UnblockedLoopEvent* msg);
  static const ::grpcagent::UnblockedLoopBody& body(const UnblockedLoopEvent* msg);
};

const ::grpcagent::CommonResponse&
UnblockedLoopEvent::_Internal::common(const UnblockedLoopEvent* msg) {
  return *msg->_impl_.common_;
}
const ::grpcagent::UnblockedLoopBody&
UnblockedLoopEvent::_Internal::body(const UnblockedLoopEvent* msg) {
  return *msg->_impl_.body_;
}
void UnblockedLoopEvent::clear_common() {
  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
}
UnblockedLoopEvent::UnblockedLoopEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.UnblockedLoopEvent)
}
UnblockedLoopEvent::UnblockedLoopEvent(const UnblockedLoopEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UnblockedLoopEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    _this->_impl_.common_ = new ::grpcagent::CommonResponse(*from._impl_.common_);
  }
  if (from._internal_has_body()) {
    _this->_impl_.body_ = new ::grpcagent::UnblockedLoopBody(*from._impl_.body_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.UnblockedLoopEvent)
}

inline void UnblockedLoopEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UnblockedLoopEvent::~UnblockedLoopEvent() {
  // @@protoc_insertion_point(destructor:grpcagent.UnblockedLoopEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UnblockedLoopEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.common_;
  if (this != internal_default_instance()) delete _impl_.body_;
}

void UnblockedLoopEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UnblockedLoopEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.UnblockedLoopEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnblockedLoopEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.CommonResponse common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.UnblockedLoopBody body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UnblockedLoopEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.UnblockedLoopEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::common(this),
        _Internal::common(this).GetCachedSize(), target, stream);
  }

  // .grpcagent.UnblockedLoopBody body = 2;
  if (this->_internal_has_body()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.UnblockedLoopEvent)
  return target;
}

size_t UnblockedLoopEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.UnblockedLoopEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.common_);
  }

  // .grpcagent.UnblockedLoopBody body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UnblockedLoopEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UnblockedLoopEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UnblockedLoopEvent::GetClassData() const { return &_class_data_; }


void UnblockedLoopEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UnblockedLoopEvent*>(&to_msg);
  auto& from = static_cast<const UnblockedLoopEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.UnblockedLoopEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_common()) {
    _this->_internal_mutable_common()->::grpcagent::CommonResponse::MergeFrom(
        from._internal_common());
  }
  if (from._internal_has_body()) {
    _this->_internal_mutable_body()->::grpcagent::UnblockedLoopBody::MergeFrom(
        from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UnblockedLoopEvent::CopyFrom(const UnblockedLoopEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.UnblockedLoopEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnblockedLoopEvent::IsInitialized() const {
  return true;
}

void UnblockedLoopEvent::InternalSwap(UnblockedLoopEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnblockedLoopEvent, _impl_.body_)
      + sizeof(UnblockedLoopEvent::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(UnblockedLoopEvent, _impl_.common_)>(
          reinterpret_cast<char*>(&_impl_.common_),
          reinterpret_cast<char*>(&other->_impl_.common_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UnblockedLoopEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_blocked_5floop_2eproto_getter, &descriptor_table_blocked_5floop_2eproto_once,
      file_level_metadata_blocked_5floop_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcagent
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcagent::Stack*
Arena::CreateMaybeMessage< ::grpcagent::Stack >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::Stack >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::BlockedLoopBody*
Arena::CreateMaybeMessage< ::grpcagent::BlockedLoopBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::BlockedLoopBody >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::BlockedLoopEvent*
Arena::CreateMaybeMessage< ::grpcagent::BlockedLoopEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::BlockedLoopEvent >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::UnblockedLoopBody*
Arena::CreateMaybeMessage< ::grpcagent::UnblockedLoopBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::UnblockedLoopBody >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::UnblockedLoopEvent*
Arena::CreateMaybeMessage< ::grpcagent::UnblockedLoopEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::UnblockedLoopEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
