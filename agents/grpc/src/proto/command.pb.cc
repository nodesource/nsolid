// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

#include "command.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcagent {
PROTOBUF_CONSTEXPR CommandArgs::CommandArgs(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.args_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct CommandArgsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandArgsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandArgsDefaultTypeInternal() {}
  union {
    CommandArgs _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandArgsDefaultTypeInternal _CommandArgs_default_instance_;
PROTOBUF_CONSTEXPR CommandRequest::CommandRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.requestid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.command_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.args_)*/nullptr
  , /*decltype(_impl_.version_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommandRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandRequestDefaultTypeInternal() {}
  union {
    CommandRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandRequestDefaultTypeInternal _CommandRequest_default_instance_;
PROTOBUF_CONSTEXPR CommandResponse::CommandResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.error_message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CommandResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CommandResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CommandResponseDefaultTypeInternal() {}
  union {
    CommandResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CommandResponseDefaultTypeInternal _CommandResponse_default_instance_;
}  // namespace grpcagent
static ::_pb::Metadata file_level_metadata_command_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_command_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_command_2eproto = nullptr;

const uint32_t TableStruct_command_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandArgs, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandArgs, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandArgs, _impl_.args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandRequest, _impl_.requestid_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandRequest, _impl_.version_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandRequest, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandRequest, _impl_.command_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandRequest, _impl_.args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::CommandResponse, _impl_.error_message_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcagent::CommandArgs)},
  { 8, -1, -1, sizeof(::grpcagent::CommandRequest)},
  { 19, -1, -1, sizeof(::grpcagent::CommandResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcagent::_CommandArgs_default_instance_._instance,
  &::grpcagent::_CommandRequest_default_instance_._instance,
  &::grpcagent::_CommandResponse_default_instance_._instance,
};

const char descriptor_table_protodef_command_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rcommand.proto\022\tgrpcagent\032\021reconfigure."
  "proto\"H\n\013CommandArgs\0221\n\013reconfigure\030\001 \001("
  "\0132\032.grpcagent.ReconfigureBodyH\000B\006\n\004args\""
  "w\n\016CommandRequest\022\021\n\trequestId\030\001 \001(\t\022\017\n\007"
  "version\030\002 \001(\r\022\n\n\002id\030\003 \001(\t\022\017\n\007command\030\004 \001"
  "(\t\022$\n\004args\030\005 \001(\0132\026.grpcagent.CommandArgs"
  "\"(\n\017CommandResponse\022\025\n\rerror_message\030\001 \001"
  "(\tb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_command_2eproto_deps[1] = {
  &::descriptor_table_reconfigure_2eproto,
};
static ::_pbi::once_flag descriptor_table_command_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_command_2eproto = {
    false, false, 290, descriptor_table_protodef_command_2eproto,
    "command.proto",
    &descriptor_table_command_2eproto_once, descriptor_table_command_2eproto_deps, 1, 3,
    schemas, file_default_instances, TableStruct_command_2eproto::offsets,
    file_level_metadata_command_2eproto, file_level_enum_descriptors_command_2eproto,
    file_level_service_descriptors_command_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_command_2eproto_getter() {
  return &descriptor_table_command_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_command_2eproto(&descriptor_table_command_2eproto);
namespace grpcagent {

// ===================================================================

class CommandArgs::_Internal {
 public:
  static const ::grpcagent::ReconfigureBody& reconfigure(const CommandArgs* msg);
};

const ::grpcagent::ReconfigureBody&
CommandArgs::_Internal::reconfigure(const CommandArgs* msg) {
  return *msg->_impl_.args_.reconfigure_;
}
void CommandArgs::set_allocated_reconfigure(::grpcagent::ReconfigureBody* reconfigure) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_args();
  if (reconfigure) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(reconfigure));
    if (message_arena != submessage_arena) {
      reconfigure = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reconfigure, submessage_arena);
    }
    set_has_reconfigure();
    _impl_.args_.reconfigure_ = reconfigure;
  }
  // @@protoc_insertion_point(field_set_allocated:grpcagent.CommandArgs.reconfigure)
}
void CommandArgs::clear_reconfigure() {
  if (_internal_has_reconfigure()) {
    if (GetArenaForAllocation() == nullptr) {
      delete _impl_.args_.reconfigure_;
    }
    clear_has_args();
  }
}
CommandArgs::CommandArgs(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.CommandArgs)
}
CommandArgs::CommandArgs(const CommandArgs& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommandArgs* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_args();
  switch (from.args_case()) {
    case kReconfigure: {
      _this->_internal_mutable_reconfigure()->::grpcagent::ReconfigureBody::MergeFrom(
          from._internal_reconfigure());
      break;
    }
    case ARGS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.CommandArgs)
}

inline void CommandArgs::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_args();
}

CommandArgs::~CommandArgs() {
  // @@protoc_insertion_point(destructor:grpcagent.CommandArgs)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommandArgs::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_args()) {
    clear_args();
  }
}

void CommandArgs::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommandArgs::clear_args() {
// @@protoc_insertion_point(one_of_clear_start:grpcagent.CommandArgs)
  switch (args_case()) {
    case kReconfigure: {
      if (GetArenaForAllocation() == nullptr) {
        delete _impl_.args_.reconfigure_;
      }
      break;
    }
    case ARGS_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ARGS_NOT_SET;
}


void CommandArgs::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.CommandArgs)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_args();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandArgs::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.ReconfigureBody reconfigure = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_reconfigure(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommandArgs::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.CommandArgs)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.ReconfigureBody reconfigure = 1;
  if (_internal_has_reconfigure()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::reconfigure(this),
        _Internal::reconfigure(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.CommandArgs)
  return target;
}

size_t CommandArgs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.CommandArgs)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (args_case()) {
    // .grpcagent.ReconfigureBody reconfigure = 1;
    case kReconfigure: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *_impl_.args_.reconfigure_);
      break;
    }
    case ARGS_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommandArgs::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommandArgs::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommandArgs::GetClassData() const { return &_class_data_; }


void CommandArgs::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommandArgs*>(&to_msg);
  auto& from = static_cast<const CommandArgs&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.CommandArgs)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.args_case()) {
    case kReconfigure: {
      _this->_internal_mutable_reconfigure()->::grpcagent::ReconfigureBody::MergeFrom(
          from._internal_reconfigure());
      break;
    }
    case ARGS_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommandArgs::CopyFrom(const CommandArgs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.CommandArgs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandArgs::IsInitialized() const {
  return true;
}

void CommandArgs::InternalSwap(CommandArgs* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.args_, other->_impl_.args_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandArgs::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_command_2eproto_getter, &descriptor_table_command_2eproto_once,
      file_level_metadata_command_2eproto[0]);
}

// ===================================================================

class CommandRequest::_Internal {
 public:
  static const ::grpcagent::CommandArgs& args(const CommandRequest* msg);
};

const ::grpcagent::CommandArgs&
CommandRequest::_Internal::args(const CommandRequest* msg) {
  return *msg->_impl_.args_;
}
CommandRequest::CommandRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.CommandRequest)
}
CommandRequest::CommandRequest(const CommandRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommandRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.requestid_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.command_){}
    , decltype(_impl_.args_){nullptr}
    , decltype(_impl_.version_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_requestid().empty()) {
    _this->_impl_.requestid_.Set(from._internal_requestid(), 
      _this->GetArenaForAllocation());
  }
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_command().empty()) {
    _this->_impl_.command_.Set(from._internal_command(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_args()) {
    _this->_impl_.args_ = new ::grpcagent::CommandArgs(*from._impl_.args_);
  }
  _this->_impl_.version_ = from._impl_.version_;
  // @@protoc_insertion_point(copy_constructor:grpcagent.CommandRequest)
}

inline void CommandRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.requestid_){}
    , decltype(_impl_.id_){}
    , decltype(_impl_.command_){}
    , decltype(_impl_.args_){nullptr}
    , decltype(_impl_.version_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.requestid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.requestid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.command_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.command_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CommandRequest::~CommandRequest() {
  // @@protoc_insertion_point(destructor:grpcagent.CommandRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommandRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.requestid_.Destroy();
  _impl_.id_.Destroy();
  _impl_.command_.Destroy();
  if (this != internal_default_instance()) delete _impl_.args_;
}

void CommandRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommandRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.CommandRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requestid_.ClearToEmpty();
  _impl_.id_.ClearToEmpty();
  _impl_.command_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.args_ != nullptr) {
    delete _impl_.args_;
  }
  _impl_.args_ = nullptr;
  _impl_.version_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string requestId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_requestid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommandRequest.requestId"));
        } else
          goto handle_unusual;
        continue;
      // uint32 version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommandRequest.id"));
        } else
          goto handle_unusual;
        continue;
      // string command = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_command();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommandRequest.command"));
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.CommandArgs args = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_args(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommandRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.CommandRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string requestId = 1;
  if (!this->_internal_requestid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requestid().data(), static_cast<int>(this->_internal_requestid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommandRequest.requestId");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_requestid(), target);
  }

  // uint32 version = 2;
  if (this->_internal_version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_version(), target);
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommandRequest.id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_id(), target);
  }

  // string command = 4;
  if (!this->_internal_command().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_command().data(), static_cast<int>(this->_internal_command().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommandRequest.command");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_command(), target);
  }

  // .grpcagent.CommandArgs args = 5;
  if (this->_internal_has_args()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::args(this),
        _Internal::args(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.CommandRequest)
  return target;
}

size_t CommandRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.CommandRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string requestId = 1;
  if (!this->_internal_requestid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requestid());
  }

  // string id = 3;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string command = 4;
  if (!this->_internal_command().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_command());
  }

  // .grpcagent.CommandArgs args = 5;
  if (this->_internal_has_args()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.args_);
  }

  // uint32 version = 2;
  if (this->_internal_version() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_version());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommandRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommandRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommandRequest::GetClassData() const { return &_class_data_; }


void CommandRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommandRequest*>(&to_msg);
  auto& from = static_cast<const CommandRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.CommandRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_requestid().empty()) {
    _this->_internal_set_requestid(from._internal_requestid());
  }
  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_command().empty()) {
    _this->_internal_set_command(from._internal_command());
  }
  if (from._internal_has_args()) {
    _this->_internal_mutable_args()->::grpcagent::CommandArgs::MergeFrom(
        from._internal_args());
  }
  if (from._internal_version() != 0) {
    _this->_internal_set_version(from._internal_version());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommandRequest::CopyFrom(const CommandRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.CommandRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandRequest::IsInitialized() const {
  return true;
}

void CommandRequest::InternalSwap(CommandRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.requestid_, lhs_arena,
      &other->_impl_.requestid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.command_, lhs_arena,
      &other->_impl_.command_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CommandRequest, _impl_.version_)
      + sizeof(CommandRequest::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(CommandRequest, _impl_.args_)>(
          reinterpret_cast<char*>(&_impl_.args_),
          reinterpret_cast<char*>(&other->_impl_.args_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_command_2eproto_getter, &descriptor_table_command_2eproto_once,
      file_level_metadata_command_2eproto[1]);
}

// ===================================================================

class CommandResponse::_Internal {
 public:
};

CommandResponse::CommandResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.CommandResponse)
}
CommandResponse::CommandResponse(const CommandResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CommandResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_error_message().empty()) {
    _this->_impl_.error_message_.Set(from._internal_error_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.CommandResponse)
}

inline void CommandResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.error_message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.error_message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.error_message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CommandResponse::~CommandResponse() {
  // @@protoc_insertion_point(destructor:grpcagent.CommandResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CommandResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.error_message_.Destroy();
}

void CommandResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CommandResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.CommandResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string error_message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_error_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.CommandResponse.error_message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CommandResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.CommandResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string error_message = 1;
  if (!this->_internal_error_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error_message().data(), static_cast<int>(this->_internal_error_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.CommandResponse.error_message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.CommandResponse)
  return target;
}

size_t CommandResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.CommandResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error_message = 1;
  if (!this->_internal_error_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CommandResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CommandResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CommandResponse::GetClassData() const { return &_class_data_; }


void CommandResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CommandResponse*>(&to_msg);
  auto& from = static_cast<const CommandResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.CommandResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CommandResponse::CopyFrom(const CommandResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.CommandResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandResponse::IsInitialized() const {
  return true;
}

void CommandResponse::InternalSwap(CommandResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.error_message_, lhs_arena,
      &other->_impl_.error_message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_command_2eproto_getter, &descriptor_table_command_2eproto_once,
      file_level_metadata_command_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcagent
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcagent::CommandArgs*
Arena::CreateMaybeMessage< ::grpcagent::CommandArgs >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::CommandArgs >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::CommandRequest*
Arena::CreateMaybeMessage< ::grpcagent::CommandRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::CommandRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::CommandResponse*
Arena::CreateMaybeMessage< ::grpcagent::CommandResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::CommandResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
