// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

#include "metrics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcagent {
PROTOBUF_CONSTEXPR MetricsBody::MetricsBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.resource_metrics_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MetricsBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsBodyDefaultTypeInternal() {}
  union {
    MetricsBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsBodyDefaultTypeInternal _MetricsBody_default_instance_;
PROTOBUF_CONSTEXPR MetricsEvent::MetricsEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.common_)*/nullptr
  , /*decltype(_impl_.body_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MetricsEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetricsEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetricsEventDefaultTypeInternal() {}
  union {
    MetricsEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetricsEventDefaultTypeInternal _MetricsEvent_default_instance_;
}  // namespace grpcagent
static ::_pb::Metadata file_level_metadata_metrics_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_metrics_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_metrics_2eproto = nullptr;

const uint32_t TableStruct_metrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::MetricsBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::MetricsBody, _impl_.resource_metrics_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::MetricsEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::MetricsEvent, _impl_.common_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::MetricsEvent, _impl_.body_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::grpcagent::MetricsBody)},
  { 7, -1, -1, sizeof(::grpcagent::MetricsEvent)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcagent::_MetricsBody_default_instance_._instance,
  &::grpcagent::_MetricsEvent_default_instance_._instance,
};

const char descriptor_table_protodef_metrics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmetrics.proto\022\tgrpcagent\032\014common.proto"
  "\032,opentelemetry/proto/metrics/v1/metrics"
  ".proto\"X\n\013MetricsBody\022I\n\020resource_metric"
  "s\030\001 \003(\0132/.opentelemetry.proto.metrics.v1"
  ".ResourceMetrics\"_\n\014MetricsEvent\022)\n\006comm"
  "on\030\001 \001(\0132\031.grpcagent.CommonResponse\022$\n\004b"
  "ody\030\002 \001(\0132\026.grpcagent.MetricsBodyb\006proto"
  "3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_metrics_2eproto_deps[2] = {
  &::descriptor_table_common_2eproto,
  &::descriptor_table_opentelemetry_2fproto_2fmetrics_2fv1_2fmetrics_2eproto,
};
static ::_pbi::once_flag descriptor_table_metrics_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_metrics_2eproto = {
    false, false, 281, descriptor_table_protodef_metrics_2eproto,
    "metrics.proto",
    &descriptor_table_metrics_2eproto_once, descriptor_table_metrics_2eproto_deps, 2, 2,
    schemas, file_default_instances, TableStruct_metrics_2eproto::offsets,
    file_level_metadata_metrics_2eproto, file_level_enum_descriptors_metrics_2eproto,
    file_level_service_descriptors_metrics_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_metrics_2eproto_getter() {
  return &descriptor_table_metrics_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_metrics_2eproto(&descriptor_table_metrics_2eproto);
namespace grpcagent {

// ===================================================================

class MetricsBody::_Internal {
 public:
};

void MetricsBody::clear_resource_metrics() {
  _impl_.resource_metrics_.Clear();
}
MetricsBody::MetricsBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.MetricsBody)
}
MetricsBody::MetricsBody(const MetricsBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MetricsBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_metrics_){from._impl_.resource_metrics_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpcagent.MetricsBody)
}

inline void MetricsBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.resource_metrics_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MetricsBody::~MetricsBody() {
  // @@protoc_insertion_point(destructor:grpcagent.MetricsBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MetricsBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.resource_metrics_.~RepeatedPtrField();
}

void MetricsBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MetricsBody::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.MetricsBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_metrics_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetricsBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_resource_metrics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MetricsBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.MetricsBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_resource_metrics_size()); i < n; i++) {
    const auto& repfield = this->_internal_resource_metrics(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.MetricsBody)
  return target;
}

size_t MetricsBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.MetricsBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
  total_size += 1UL * this->_internal_resource_metrics_size();
  for (const auto& msg : this->_impl_.resource_metrics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetricsBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MetricsBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetricsBody::GetClassData() const { return &_class_data_; }


void MetricsBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MetricsBody*>(&to_msg);
  auto& from = static_cast<const MetricsBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.MetricsBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.resource_metrics_.MergeFrom(from._impl_.resource_metrics_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MetricsBody::CopyFrom(const MetricsBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.MetricsBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricsBody::IsInitialized() const {
  return true;
}

void MetricsBody::InternalSwap(MetricsBody* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_metrics_.InternalSwap(&other->_impl_.resource_metrics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MetricsBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_metrics_2eproto_getter, &descriptor_table_metrics_2eproto_once,
      file_level_metadata_metrics_2eproto[0]);
}

// ===================================================================

class MetricsEvent::_Internal {
 public:
  static const ::grpcagent::CommonResponse& common(const MetricsEvent* msg);
  static const ::grpcagent::MetricsBody& body(const MetricsEvent* msg);
};

const ::grpcagent::CommonResponse&
MetricsEvent::_Internal::common(const MetricsEvent* msg) {
  return *msg->_impl_.common_;
}
const ::grpcagent::MetricsBody&
MetricsEvent::_Internal::body(const MetricsEvent* msg) {
  return *msg->_impl_.body_;
}
void MetricsEvent::clear_common() {
  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
}
MetricsEvent::MetricsEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.MetricsEvent)
}
MetricsEvent::MetricsEvent(const MetricsEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MetricsEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    _this->_impl_.common_ = new ::grpcagent::CommonResponse(*from._impl_.common_);
  }
  if (from._internal_has_body()) {
    _this->_impl_.body_ = new ::grpcagent::MetricsBody(*from._impl_.body_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.MetricsEvent)
}

inline void MetricsEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

MetricsEvent::~MetricsEvent() {
  // @@protoc_insertion_point(destructor:grpcagent.MetricsEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MetricsEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.common_;
  if (this != internal_default_instance()) delete _impl_.body_;
}

void MetricsEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MetricsEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.MetricsEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetricsEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.CommonResponse common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.MetricsBody body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MetricsEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.MetricsEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::common(this),
        _Internal::common(this).GetCachedSize(), target, stream);
  }

  // .grpcagent.MetricsBody body = 2;
  if (this->_internal_has_body()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.MetricsEvent)
  return target;
}

size_t MetricsEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.MetricsEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.common_);
  }

  // .grpcagent.MetricsBody body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetricsEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MetricsEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetricsEvent::GetClassData() const { return &_class_data_; }


void MetricsEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MetricsEvent*>(&to_msg);
  auto& from = static_cast<const MetricsEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.MetricsEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_common()) {
    _this->_internal_mutable_common()->::grpcagent::CommonResponse::MergeFrom(
        from._internal_common());
  }
  if (from._internal_has_body()) {
    _this->_internal_mutable_body()->::grpcagent::MetricsBody::MergeFrom(
        from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MetricsEvent::CopyFrom(const MetricsEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.MetricsEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetricsEvent::IsInitialized() const {
  return true;
}

void MetricsEvent::InternalSwap(MetricsEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MetricsEvent, _impl_.body_)
      + sizeof(MetricsEvent::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(MetricsEvent, _impl_.common_)>(
          reinterpret_cast<char*>(&_impl_.common_),
          reinterpret_cast<char*>(&other->_impl_.common_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MetricsEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_metrics_2eproto_getter, &descriptor_table_metrics_2eproto_once,
      file_level_metadata_metrics_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcagent
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcagent::MetricsBody*
Arena::CreateMaybeMessage< ::grpcagent::MetricsBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::MetricsBody >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::MetricsEvent*
Arena::CreateMaybeMessage< ::grpcagent::MetricsEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::MetricsEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
