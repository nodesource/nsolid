// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_metrics_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_metrics_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
#include "opentelemetry/proto/metrics/v1/metrics.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_metrics_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_metrics_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_metrics_2eproto;
namespace grpcagent {
class MetricsBody;
struct MetricsBodyDefaultTypeInternal;
extern MetricsBodyDefaultTypeInternal _MetricsBody_default_instance_;
class MetricsEvent;
struct MetricsEventDefaultTypeInternal;
extern MetricsEventDefaultTypeInternal _MetricsEvent_default_instance_;
}  // namespace grpcagent
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcagent::MetricsBody* Arena::CreateMaybeMessage<::grpcagent::MetricsBody>(Arena*);
template<> ::grpcagent::MetricsEvent* Arena::CreateMaybeMessage<::grpcagent::MetricsEvent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcagent {

// ===================================================================

class MetricsBody final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcagent.MetricsBody) */ {
 public:
  inline MetricsBody() : MetricsBody(nullptr) {}
  ~MetricsBody() override;
  explicit PROTOBUF_CONSTEXPR MetricsBody(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MetricsBody(const MetricsBody& from);
  MetricsBody(MetricsBody&& from) noexcept
    : MetricsBody() {
    *this = ::std::move(from);
  }

  inline MetricsBody& operator=(const MetricsBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricsBody& operator=(MetricsBody&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetricsBody& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetricsBody* internal_default_instance() {
    return reinterpret_cast<const MetricsBody*>(
               &_MetricsBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MetricsBody& a, MetricsBody& b) {
    a.Swap(&b);
  }
  inline void Swap(MetricsBody* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricsBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetricsBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetricsBody>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MetricsBody& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MetricsBody& from) {
    MetricsBody::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetricsBody* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcagent.MetricsBody";
  }
  protected:
  explicit MetricsBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceMetricsFieldNumber = 1,
  };
  // repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
  int resource_metrics_size() const;
  private:
  int _internal_resource_metrics_size() const;
  public:
  void clear_resource_metrics();
  ::opentelemetry::proto::metrics::v1::ResourceMetrics* mutable_resource_metrics(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opentelemetry::proto::metrics::v1::ResourceMetrics >*
      mutable_resource_metrics();
  private:
  const ::opentelemetry::proto::metrics::v1::ResourceMetrics& _internal_resource_metrics(int index) const;
  ::opentelemetry::proto::metrics::v1::ResourceMetrics* _internal_add_resource_metrics();
  public:
  const ::opentelemetry::proto::metrics::v1::ResourceMetrics& resource_metrics(int index) const;
  ::opentelemetry::proto::metrics::v1::ResourceMetrics* add_resource_metrics();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opentelemetry::proto::metrics::v1::ResourceMetrics >&
      resource_metrics() const;

  // @@protoc_insertion_point(class_scope:grpcagent.MetricsBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opentelemetry::proto::metrics::v1::ResourceMetrics > resource_metrics_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metrics_2eproto;
};
// -------------------------------------------------------------------

class MetricsEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcagent.MetricsEvent) */ {
 public:
  inline MetricsEvent() : MetricsEvent(nullptr) {}
  ~MetricsEvent() override;
  explicit PROTOBUF_CONSTEXPR MetricsEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MetricsEvent(const MetricsEvent& from);
  MetricsEvent(MetricsEvent&& from) noexcept
    : MetricsEvent() {
    *this = ::std::move(from);
  }

  inline MetricsEvent& operator=(const MetricsEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricsEvent& operator=(MetricsEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetricsEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetricsEvent* internal_default_instance() {
    return reinterpret_cast<const MetricsEvent*>(
               &_MetricsEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MetricsEvent& a, MetricsEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(MetricsEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricsEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetricsEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MetricsEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MetricsEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MetricsEvent& from) {
    MetricsEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MetricsEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcagent.MetricsEvent";
  }
  protected:
  explicit MetricsEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommonFieldNumber = 1,
    kBodyFieldNumber = 2,
  };
  // .grpcagent.CommonResponse common = 1;
  bool has_common() const;
  private:
  bool _internal_has_common() const;
  public:
  void clear_common();
  const ::grpcagent::CommonResponse& common() const;
  PROTOBUF_NODISCARD ::grpcagent::CommonResponse* release_common();
  ::grpcagent::CommonResponse* mutable_common();
  void set_allocated_common(::grpcagent::CommonResponse* common);
  private:
  const ::grpcagent::CommonResponse& _internal_common() const;
  ::grpcagent::CommonResponse* _internal_mutable_common();
  public:
  void unsafe_arena_set_allocated_common(
      ::grpcagent::CommonResponse* common);
  ::grpcagent::CommonResponse* unsafe_arena_release_common();

  // .grpcagent.MetricsBody body = 2;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const ::grpcagent::MetricsBody& body() const;
  PROTOBUF_NODISCARD ::grpcagent::MetricsBody* release_body();
  ::grpcagent::MetricsBody* mutable_body();
  void set_allocated_body(::grpcagent::MetricsBody* body);
  private:
  const ::grpcagent::MetricsBody& _internal_body() const;
  ::grpcagent::MetricsBody* _internal_mutable_body();
  public:
  void unsafe_arena_set_allocated_body(
      ::grpcagent::MetricsBody* body);
  ::grpcagent::MetricsBody* unsafe_arena_release_body();

  // @@protoc_insertion_point(class_scope:grpcagent.MetricsEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::grpcagent::CommonResponse* common_;
    ::grpcagent::MetricsBody* body_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_metrics_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MetricsBody

// repeated .opentelemetry.proto.metrics.v1.ResourceMetrics resource_metrics = 1;
inline int MetricsBody::_internal_resource_metrics_size() const {
  return _impl_.resource_metrics_.size();
}
inline int MetricsBody::resource_metrics_size() const {
  return _internal_resource_metrics_size();
}
inline ::opentelemetry::proto::metrics::v1::ResourceMetrics* MetricsBody::mutable_resource_metrics(int index) {
  // @@protoc_insertion_point(field_mutable:grpcagent.MetricsBody.resource_metrics)
  return _impl_.resource_metrics_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opentelemetry::proto::metrics::v1::ResourceMetrics >*
MetricsBody::mutable_resource_metrics() {
  // @@protoc_insertion_point(field_mutable_list:grpcagent.MetricsBody.resource_metrics)
  return &_impl_.resource_metrics_;
}
inline const ::opentelemetry::proto::metrics::v1::ResourceMetrics& MetricsBody::_internal_resource_metrics(int index) const {
  return _impl_.resource_metrics_.Get(index);
}
inline const ::opentelemetry::proto::metrics::v1::ResourceMetrics& MetricsBody::resource_metrics(int index) const {
  // @@protoc_insertion_point(field_get:grpcagent.MetricsBody.resource_metrics)
  return _internal_resource_metrics(index);
}
inline ::opentelemetry::proto::metrics::v1::ResourceMetrics* MetricsBody::_internal_add_resource_metrics() {
  return _impl_.resource_metrics_.Add();
}
inline ::opentelemetry::proto::metrics::v1::ResourceMetrics* MetricsBody::add_resource_metrics() {
  ::opentelemetry::proto::metrics::v1::ResourceMetrics* _add = _internal_add_resource_metrics();
  // @@protoc_insertion_point(field_add:grpcagent.MetricsBody.resource_metrics)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::opentelemetry::proto::metrics::v1::ResourceMetrics >&
MetricsBody::resource_metrics() const {
  // @@protoc_insertion_point(field_list:grpcagent.MetricsBody.resource_metrics)
  return _impl_.resource_metrics_;
}

// -------------------------------------------------------------------

// MetricsEvent

// .grpcagent.CommonResponse common = 1;
inline bool MetricsEvent::_internal_has_common() const {
  return this != internal_default_instance() && _impl_.common_ != nullptr;
}
inline bool MetricsEvent::has_common() const {
  return _internal_has_common();
}
inline const ::grpcagent::CommonResponse& MetricsEvent::_internal_common() const {
  const ::grpcagent::CommonResponse* p = _impl_.common_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpcagent::CommonResponse&>(
      ::grpcagent::_CommonResponse_default_instance_);
}
inline const ::grpcagent::CommonResponse& MetricsEvent::common() const {
  // @@protoc_insertion_point(field_get:grpcagent.MetricsEvent.common)
  return _internal_common();
}
inline void MetricsEvent::unsafe_arena_set_allocated_common(
    ::grpcagent::CommonResponse* common) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.common_);
  }
  _impl_.common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpcagent.MetricsEvent.common)
}
inline ::grpcagent::CommonResponse* MetricsEvent::release_common() {
  
  ::grpcagent::CommonResponse* temp = _impl_.common_;
  _impl_.common_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpcagent::CommonResponse* MetricsEvent::unsafe_arena_release_common() {
  // @@protoc_insertion_point(field_release:grpcagent.MetricsEvent.common)
  
  ::grpcagent::CommonResponse* temp = _impl_.common_;
  _impl_.common_ = nullptr;
  return temp;
}
inline ::grpcagent::CommonResponse* MetricsEvent::_internal_mutable_common() {
  
  if (_impl_.common_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpcagent::CommonResponse>(GetArenaForAllocation());
    _impl_.common_ = p;
  }
  return _impl_.common_;
}
inline ::grpcagent::CommonResponse* MetricsEvent::mutable_common() {
  ::grpcagent::CommonResponse* _msg = _internal_mutable_common();
  // @@protoc_insertion_point(field_mutable:grpcagent.MetricsEvent.common)
  return _msg;
}
inline void MetricsEvent::set_allocated_common(::grpcagent::CommonResponse* common) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.common_);
  }
  if (common) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(common));
    if (message_arena != submessage_arena) {
      common = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, common, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.common_ = common;
  // @@protoc_insertion_point(field_set_allocated:grpcagent.MetricsEvent.common)
}

// .grpcagent.MetricsBody body = 2;
inline bool MetricsEvent::_internal_has_body() const {
  return this != internal_default_instance() && _impl_.body_ != nullptr;
}
inline bool MetricsEvent::has_body() const {
  return _internal_has_body();
}
inline void MetricsEvent::clear_body() {
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
}
inline const ::grpcagent::MetricsBody& MetricsEvent::_internal_body() const {
  const ::grpcagent::MetricsBody* p = _impl_.body_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpcagent::MetricsBody&>(
      ::grpcagent::_MetricsBody_default_instance_);
}
inline const ::grpcagent::MetricsBody& MetricsEvent::body() const {
  // @@protoc_insertion_point(field_get:grpcagent.MetricsEvent.body)
  return _internal_body();
}
inline void MetricsEvent::unsafe_arena_set_allocated_body(
    ::grpcagent::MetricsBody* body) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.body_);
  }
  _impl_.body_ = body;
  if (body) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpcagent.MetricsEvent.body)
}
inline ::grpcagent::MetricsBody* MetricsEvent::release_body() {
  
  ::grpcagent::MetricsBody* temp = _impl_.body_;
  _impl_.body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpcagent::MetricsBody* MetricsEvent::unsafe_arena_release_body() {
  // @@protoc_insertion_point(field_release:grpcagent.MetricsEvent.body)
  
  ::grpcagent::MetricsBody* temp = _impl_.body_;
  _impl_.body_ = nullptr;
  return temp;
}
inline ::grpcagent::MetricsBody* MetricsEvent::_internal_mutable_body() {
  
  if (_impl_.body_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpcagent::MetricsBody>(GetArenaForAllocation());
    _impl_.body_ = p;
  }
  return _impl_.body_;
}
inline ::grpcagent::MetricsBody* MetricsEvent::mutable_body() {
  ::grpcagent::MetricsBody* _msg = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:grpcagent.MetricsEvent.body)
  return _msg;
}
inline void MetricsEvent::set_allocated_body(::grpcagent::MetricsBody* body) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.body_;
  }
  if (body) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(body);
    if (message_arena != submessage_arena) {
      body = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.body_ = body;
  // @@protoc_insertion_point(field_set_allocated:grpcagent.MetricsEvent.body)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcagent

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_metrics_2eproto
