// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reconfigure.proto

#include "reconfigure.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace grpcagent {
PROTOBUF_CONSTEXPR ReconfigureBody::ReconfigureBody(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.tags_)*/{}
  , /*decltype(_impl_.statsd_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.statsdbucket_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.statsdtags_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.blockedloopthreshold_)*/0u
  , /*decltype(_impl_.interval_)*/0u
  , /*decltype(_impl_.pausemetrics_)*/false
  , /*decltype(_impl_.promisetracking_)*/false
  , /*decltype(_impl_.redactsnapshots_)*/false
  , /*decltype(_impl_.tracingenabled_)*/false
  , /*decltype(_impl_.tracingmodulesblacklist_)*/0u} {}
struct ReconfigureBodyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReconfigureBodyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReconfigureBodyDefaultTypeInternal() {}
  union {
    ReconfigureBody _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReconfigureBodyDefaultTypeInternal _ReconfigureBody_default_instance_;
PROTOBUF_CONSTEXPR ReconfigureEvent::ReconfigureEvent(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.common_)*/nullptr
  , /*decltype(_impl_.body_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReconfigureEventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReconfigureEventDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReconfigureEventDefaultTypeInternal() {}
  union {
    ReconfigureEvent _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReconfigureEventDefaultTypeInternal _ReconfigureEvent_default_instance_;
}  // namespace grpcagent
static ::_pb::Metadata file_level_metadata_reconfigure_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_reconfigure_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_reconfigure_2eproto = nullptr;

const uint32_t TableStruct_reconfigure_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.blockedloopthreshold_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.interval_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.pausemetrics_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.promisetracking_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.redactsnapshots_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.statsd_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.statsdbucket_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.statsdtags_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.tags_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.tracingenabled_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureBody, _impl_.tracingmodulesblacklist_),
  3,
  4,
  5,
  6,
  7,
  0,
  1,
  2,
  ~0u,
  8,
  9,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureEvent, _impl_.common_),
  PROTOBUF_FIELD_OFFSET(::grpcagent::ReconfigureEvent, _impl_.body_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 17, -1, sizeof(::grpcagent::ReconfigureBody)},
  { 28, -1, -1, sizeof(::grpcagent::ReconfigureEvent)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::grpcagent::_ReconfigureBody_default_instance_._instance,
  &::grpcagent::_ReconfigureEvent_default_instance_._instance,
};

const char descriptor_table_protodef_reconfigure_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021reconfigure.proto\022\tgrpcagent\032\014common.p"
  "roto\"\365\003\n\017ReconfigureBody\022!\n\024blockedLoopT"
  "hreshold\030\001 \001(\rH\000\210\001\001\022\025\n\010interval\030\002 \001(\rH\001\210"
  "\001\001\022\031\n\014pauseMetrics\030\003 \001(\010H\002\210\001\001\022\034\n\017promise"
  "Tracking\030\004 \001(\010H\003\210\001\001\022\034\n\017redactSnapshots\030\005"
  " \001(\010H\004\210\001\001\022\023\n\006statsd\030\006 \001(\tH\005\210\001\001\022\031\n\014statsd"
  "Bucket\030\007 \001(\tH\006\210\001\001\022\027\n\nstatsdTags\030\010 \001(\tH\007\210"
  "\001\001\022\014\n\004tags\030\t \003(\t\022\033\n\016tracingEnabled\030\n \001(\010"
  "H\010\210\001\001\022$\n\027tracingModulesBlacklist\030\013 \001(\rH\t"
  "\210\001\001B\027\n\025_blockedLoopThresholdB\013\n\t_interva"
  "lB\017\n\r_pauseMetricsB\022\n\020_promiseTrackingB\022"
  "\n\020_redactSnapshotsB\t\n\007_statsdB\017\n\r_statsd"
  "BucketB\r\n\013_statsdTagsB\021\n\017_tracingEnabled"
  "B\032\n\030_tracingModulesBlacklist\"g\n\020Reconfig"
  "ureEvent\022)\n\006common\030\001 \001(\0132\031.grpcagent.Com"
  "monResponse\022(\n\004body\030\002 \001(\0132\032.grpcagent.Re"
  "configureBodyb\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_reconfigure_2eproto_deps[1] = {
  &::descriptor_table_common_2eproto,
};
static ::_pbi::once_flag descriptor_table_reconfigure_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_reconfigure_2eproto = {
    false, false, 661, descriptor_table_protodef_reconfigure_2eproto,
    "reconfigure.proto",
    &descriptor_table_reconfigure_2eproto_once, descriptor_table_reconfigure_2eproto_deps, 1, 2,
    schemas, file_default_instances, TableStruct_reconfigure_2eproto::offsets,
    file_level_metadata_reconfigure_2eproto, file_level_enum_descriptors_reconfigure_2eproto,
    file_level_service_descriptors_reconfigure_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_reconfigure_2eproto_getter() {
  return &descriptor_table_reconfigure_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_reconfigure_2eproto(&descriptor_table_reconfigure_2eproto);
namespace grpcagent {

// ===================================================================

class ReconfigureBody::_Internal {
 public:
  using HasBits = decltype(std::declval<ReconfigureBody>()._impl_._has_bits_);
  static void set_has_blockedloopthreshold(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_interval(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_pausemetrics(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_promisetracking(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_redactsnapshots(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_statsd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_statsdbucket(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_statsdtags(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_tracingenabled(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_tracingmodulesblacklist(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
};

ReconfigureBody::ReconfigureBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.ReconfigureBody)
}
ReconfigureBody::ReconfigureBody(const ReconfigureBody& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReconfigureBody* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tags_){from._impl_.tags_}
    , decltype(_impl_.statsd_){}
    , decltype(_impl_.statsdbucket_){}
    , decltype(_impl_.statsdtags_){}
    , decltype(_impl_.blockedloopthreshold_){}
    , decltype(_impl_.interval_){}
    , decltype(_impl_.pausemetrics_){}
    , decltype(_impl_.promisetracking_){}
    , decltype(_impl_.redactsnapshots_){}
    , decltype(_impl_.tracingenabled_){}
    , decltype(_impl_.tracingmodulesblacklist_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.statsd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.statsd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_statsd()) {
    _this->_impl_.statsd_.Set(from._internal_statsd(), 
      _this->GetArenaForAllocation());
  }
  _impl_.statsdbucket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.statsdbucket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_statsdbucket()) {
    _this->_impl_.statsdbucket_.Set(from._internal_statsdbucket(), 
      _this->GetArenaForAllocation());
  }
  _impl_.statsdtags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.statsdtags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_statsdtags()) {
    _this->_impl_.statsdtags_.Set(from._internal_statsdtags(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.blockedloopthreshold_, &from._impl_.blockedloopthreshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.tracingmodulesblacklist_) -
    reinterpret_cast<char*>(&_impl_.blockedloopthreshold_)) + sizeof(_impl_.tracingmodulesblacklist_));
  // @@protoc_insertion_point(copy_constructor:grpcagent.ReconfigureBody)
}

inline void ReconfigureBody::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.tags_){arena}
    , decltype(_impl_.statsd_){}
    , decltype(_impl_.statsdbucket_){}
    , decltype(_impl_.statsdtags_){}
    , decltype(_impl_.blockedloopthreshold_){0u}
    , decltype(_impl_.interval_){0u}
    , decltype(_impl_.pausemetrics_){false}
    , decltype(_impl_.promisetracking_){false}
    , decltype(_impl_.redactsnapshots_){false}
    , decltype(_impl_.tracingenabled_){false}
    , decltype(_impl_.tracingmodulesblacklist_){0u}
  };
  _impl_.statsd_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.statsd_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.statsdbucket_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.statsdbucket_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.statsdtags_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.statsdtags_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReconfigureBody::~ReconfigureBody() {
  // @@protoc_insertion_point(destructor:grpcagent.ReconfigureBody)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReconfigureBody::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.tags_.~RepeatedPtrField();
  _impl_.statsd_.Destroy();
  _impl_.statsdbucket_.Destroy();
  _impl_.statsdtags_.Destroy();
}

void ReconfigureBody::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReconfigureBody::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.ReconfigureBody)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tags_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.statsd_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.statsdbucket_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.statsdtags_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.blockedloopthreshold_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.redactsnapshots_) -
        reinterpret_cast<char*>(&_impl_.blockedloopthreshold_)) + sizeof(_impl_.redactsnapshots_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&_impl_.tracingenabled_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&_impl_.tracingmodulesblacklist_) -
        reinterpret_cast<char*>(&_impl_.tracingenabled_)) + sizeof(_impl_.tracingmodulesblacklist_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconfigureBody::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional uint32 blockedLoopThreshold = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _Internal::set_has_blockedloopthreshold(&has_bits);
          _impl_.blockedloopthreshold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 interval = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _Internal::set_has_interval(&has_bits);
          _impl_.interval_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool pauseMetrics = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _Internal::set_has_pausemetrics(&has_bits);
          _impl_.pausemetrics_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool promiseTracking = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _Internal::set_has_promisetracking(&has_bits);
          _impl_.promisetracking_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional bool redactSnapshots = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _Internal::set_has_redactsnapshots(&has_bits);
          _impl_.redactsnapshots_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string statsd = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_statsd();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.ReconfigureBody.statsd"));
        } else
          goto handle_unusual;
        continue;
      // optional string statsdBucket = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_statsdbucket();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.ReconfigureBody.statsdBucket"));
        } else
          goto handle_unusual;
        continue;
      // optional string statsdTags = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_statsdtags();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "grpcagent.ReconfigureBody.statsdTags"));
        } else
          goto handle_unusual;
        continue;
      // repeated string tags = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_tags();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "grpcagent.ReconfigureBody.tags"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // optional bool tracingEnabled = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _Internal::set_has_tracingenabled(&has_bits);
          _impl_.tracingenabled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional uint32 tracingModulesBlacklist = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _Internal::set_has_tracingmodulesblacklist(&has_bits);
          _impl_.tracingmodulesblacklist_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReconfigureBody::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.ReconfigureBody)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional uint32 blockedLoopThreshold = 1;
  if (_internal_has_blockedloopthreshold()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_blockedloopthreshold(), target);
  }

  // optional uint32 interval = 2;
  if (_internal_has_interval()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_interval(), target);
  }

  // optional bool pauseMetrics = 3;
  if (_internal_has_pausemetrics()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_pausemetrics(), target);
  }

  // optional bool promiseTracking = 4;
  if (_internal_has_promisetracking()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_promisetracking(), target);
  }

  // optional bool redactSnapshots = 5;
  if (_internal_has_redactsnapshots()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(5, this->_internal_redactsnapshots(), target);
  }

  // optional string statsd = 6;
  if (_internal_has_statsd()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_statsd().data(), static_cast<int>(this->_internal_statsd().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.ReconfigureBody.statsd");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_statsd(), target);
  }

  // optional string statsdBucket = 7;
  if (_internal_has_statsdbucket()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_statsdbucket().data(), static_cast<int>(this->_internal_statsdbucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.ReconfigureBody.statsdBucket");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_statsdbucket(), target);
  }

  // optional string statsdTags = 8;
  if (_internal_has_statsdtags()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_statsdtags().data(), static_cast<int>(this->_internal_statsdtags().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.ReconfigureBody.statsdTags");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_statsdtags(), target);
  }

  // repeated string tags = 9;
  for (int i = 0, n = this->_internal_tags_size(); i < n; i++) {
    const auto& s = this->_internal_tags(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "grpcagent.ReconfigureBody.tags");
    target = stream->WriteString(9, s, target);
  }

  // optional bool tracingEnabled = 10;
  if (_internal_has_tracingenabled()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(10, this->_internal_tracingenabled(), target);
  }

  // optional uint32 tracingModulesBlacklist = 11;
  if (_internal_has_tracingmodulesblacklist()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(11, this->_internal_tracingmodulesblacklist(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.ReconfigureBody)
  return target;
}

size_t ReconfigureBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.ReconfigureBody)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string tags = 9;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.tags_.size());
  for (int i = 0, n = _impl_.tags_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.tags_.Get(i));
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string statsd = 6;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_statsd());
    }

    // optional string statsdBucket = 7;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_statsdbucket());
    }

    // optional string statsdTags = 8;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_statsdtags());
    }

    // optional uint32 blockedLoopThreshold = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_blockedloopthreshold());
    }

    // optional uint32 interval = 2;
    if (cached_has_bits & 0x00000010u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_interval());
    }

    // optional bool pauseMetrics = 3;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 1;
    }

    // optional bool promiseTracking = 4;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional bool redactSnapshots = 5;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 1;
    }

  }
  if (cached_has_bits & 0x00000300u) {
    // optional bool tracingEnabled = 10;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 + 1;
    }

    // optional uint32 tracingModulesBlacklist = 11;
    if (cached_has_bits & 0x00000200u) {
      total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_tracingmodulesblacklist());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReconfigureBody::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReconfigureBody::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReconfigureBody::GetClassData() const { return &_class_data_; }


void ReconfigureBody::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReconfigureBody*>(&to_msg);
  auto& from = static_cast<const ReconfigureBody&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.ReconfigureBody)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.tags_.MergeFrom(from._impl_.tags_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_statsd(from._internal_statsd());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_statsdbucket(from._internal_statsdbucket());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_statsdtags(from._internal_statsdtags());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.blockedloopthreshold_ = from._impl_.blockedloopthreshold_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.interval_ = from._impl_.interval_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.pausemetrics_ = from._impl_.pausemetrics_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.promisetracking_ = from._impl_.promisetracking_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.redactsnapshots_ = from._impl_.redactsnapshots_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      _this->_impl_.tracingenabled_ = from._impl_.tracingenabled_;
    }
    if (cached_has_bits & 0x00000200u) {
      _this->_impl_.tracingmodulesblacklist_ = from._impl_.tracingmodulesblacklist_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReconfigureBody::CopyFrom(const ReconfigureBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.ReconfigureBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconfigureBody::IsInitialized() const {
  return true;
}

void ReconfigureBody::InternalSwap(ReconfigureBody* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tags_.InternalSwap(&other->_impl_.tags_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.statsd_, lhs_arena,
      &other->_impl_.statsd_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.statsdbucket_, lhs_arena,
      &other->_impl_.statsdbucket_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.statsdtags_, lhs_arena,
      &other->_impl_.statsdtags_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReconfigureBody, _impl_.tracingmodulesblacklist_)
      + sizeof(ReconfigureBody::_impl_.tracingmodulesblacklist_)
      - PROTOBUF_FIELD_OFFSET(ReconfigureBody, _impl_.blockedloopthreshold_)>(
          reinterpret_cast<char*>(&_impl_.blockedloopthreshold_),
          reinterpret_cast<char*>(&other->_impl_.blockedloopthreshold_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconfigureBody::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_reconfigure_2eproto_getter, &descriptor_table_reconfigure_2eproto_once,
      file_level_metadata_reconfigure_2eproto[0]);
}

// ===================================================================

class ReconfigureEvent::_Internal {
 public:
  static const ::grpcagent::CommonResponse& common(const ReconfigureEvent* msg);
  static const ::grpcagent::ReconfigureBody& body(const ReconfigureEvent* msg);
};

const ::grpcagent::CommonResponse&
ReconfigureEvent::_Internal::common(const ReconfigureEvent* msg) {
  return *msg->_impl_.common_;
}
const ::grpcagent::ReconfigureBody&
ReconfigureEvent::_Internal::body(const ReconfigureEvent* msg) {
  return *msg->_impl_.body_;
}
void ReconfigureEvent::clear_common() {
  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
}
ReconfigureEvent::ReconfigureEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:grpcagent.ReconfigureEvent)
}
ReconfigureEvent::ReconfigureEvent(const ReconfigureEvent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReconfigureEvent* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_common()) {
    _this->_impl_.common_ = new ::grpcagent::CommonResponse(*from._impl_.common_);
  }
  if (from._internal_has_body()) {
    _this->_impl_.body_ = new ::grpcagent::ReconfigureBody(*from._impl_.body_);
  }
  // @@protoc_insertion_point(copy_constructor:grpcagent.ReconfigureEvent)
}

inline void ReconfigureEvent::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.common_){nullptr}
    , decltype(_impl_.body_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReconfigureEvent::~ReconfigureEvent() {
  // @@protoc_insertion_point(destructor:grpcagent.ReconfigureEvent)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReconfigureEvent::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.common_;
  if (this != internal_default_instance()) delete _impl_.body_;
}

void ReconfigureEvent::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReconfigureEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcagent.ReconfigureEvent)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.common_ != nullptr) {
    delete _impl_.common_;
  }
  _impl_.common_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReconfigureEvent::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .grpcagent.CommonResponse common = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_common(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .grpcagent.ReconfigureBody body = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_body(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReconfigureEvent::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:grpcagent.ReconfigureEvent)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::common(this),
        _Internal::common(this).GetCachedSize(), target, stream);
  }

  // .grpcagent.ReconfigureBody body = 2;
  if (this->_internal_has_body()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::body(this),
        _Internal::body(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpcagent.ReconfigureEvent)
  return target;
}

size_t ReconfigureEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcagent.ReconfigureEvent)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .grpcagent.CommonResponse common = 1;
  if (this->_internal_has_common()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.common_);
  }

  // .grpcagent.ReconfigureBody body = 2;
  if (this->_internal_has_body()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.body_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReconfigureEvent::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReconfigureEvent::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReconfigureEvent::GetClassData() const { return &_class_data_; }


void ReconfigureEvent::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReconfigureEvent*>(&to_msg);
  auto& from = static_cast<const ReconfigureEvent&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:grpcagent.ReconfigureEvent)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_common()) {
    _this->_internal_mutable_common()->::grpcagent::CommonResponse::MergeFrom(
        from._internal_common());
  }
  if (from._internal_has_body()) {
    _this->_internal_mutable_body()->::grpcagent::ReconfigureBody::MergeFrom(
        from._internal_body());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReconfigureEvent::CopyFrom(const ReconfigureEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcagent.ReconfigureEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReconfigureEvent::IsInitialized() const {
  return true;
}

void ReconfigureEvent::InternalSwap(ReconfigureEvent* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReconfigureEvent, _impl_.body_)
      + sizeof(ReconfigureEvent::_impl_.body_)
      - PROTOBUF_FIELD_OFFSET(ReconfigureEvent, _impl_.common_)>(
          reinterpret_cast<char*>(&_impl_.common_),
          reinterpret_cast<char*>(&other->_impl_.common_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReconfigureEvent::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_reconfigure_2eproto_getter, &descriptor_table_reconfigure_2eproto_once,
      file_level_metadata_reconfigure_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace grpcagent
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::grpcagent::ReconfigureBody*
Arena::CreateMaybeMessage< ::grpcagent::ReconfigureBody >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::ReconfigureBody >(arena);
}
template<> PROTOBUF_NOINLINE ::grpcagent::ReconfigureEvent*
Arena::CreateMaybeMessage< ::grpcagent::ReconfigureEvent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::grpcagent::ReconfigureEvent >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
