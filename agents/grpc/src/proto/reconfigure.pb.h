// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reconfigure.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_reconfigure_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_reconfigure_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_reconfigure_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_reconfigure_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_reconfigure_2eproto;
namespace grpcagent {
class ReconfigureBody;
struct ReconfigureBodyDefaultTypeInternal;
extern ReconfigureBodyDefaultTypeInternal _ReconfigureBody_default_instance_;
class ReconfigureEvent;
struct ReconfigureEventDefaultTypeInternal;
extern ReconfigureEventDefaultTypeInternal _ReconfigureEvent_default_instance_;
}  // namespace grpcagent
PROTOBUF_NAMESPACE_OPEN
template<> ::grpcagent::ReconfigureBody* Arena::CreateMaybeMessage<::grpcagent::ReconfigureBody>(Arena*);
template<> ::grpcagent::ReconfigureEvent* Arena::CreateMaybeMessage<::grpcagent::ReconfigureEvent>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace grpcagent {

// ===================================================================

class ReconfigureBody final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcagent.ReconfigureBody) */ {
 public:
  inline ReconfigureBody() : ReconfigureBody(nullptr) {}
  ~ReconfigureBody() override;
  explicit PROTOBUF_CONSTEXPR ReconfigureBody(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReconfigureBody(const ReconfigureBody& from);
  ReconfigureBody(ReconfigureBody&& from) noexcept
    : ReconfigureBody() {
    *this = ::std::move(from);
  }

  inline ReconfigureBody& operator=(const ReconfigureBody& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReconfigureBody& operator=(ReconfigureBody&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReconfigureBody& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReconfigureBody* internal_default_instance() {
    return reinterpret_cast<const ReconfigureBody*>(
               &_ReconfigureBody_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ReconfigureBody& a, ReconfigureBody& b) {
    a.Swap(&b);
  }
  inline void Swap(ReconfigureBody* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReconfigureBody* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReconfigureBody* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReconfigureBody>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReconfigureBody& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ReconfigureBody& from) {
    ReconfigureBody::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReconfigureBody* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcagent.ReconfigureBody";
  }
  protected:
  explicit ReconfigureBody(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTagsFieldNumber = 9,
    kStatsdFieldNumber = 6,
    kStatsdBucketFieldNumber = 7,
    kStatsdTagsFieldNumber = 8,
    kBlockedLoopThresholdFieldNumber = 1,
    kIntervalFieldNumber = 2,
    kPauseMetricsFieldNumber = 3,
    kPromiseTrackingFieldNumber = 4,
    kRedactSnapshotsFieldNumber = 5,
    kTracingEnabledFieldNumber = 10,
    kTracingModulesBlacklistFieldNumber = 11,
  };
  // repeated string tags = 9;
  int tags_size() const;
  private:
  int _internal_tags_size() const;
  public:
  void clear_tags();
  const std::string& tags(int index) const;
  std::string* mutable_tags(int index);
  void set_tags(int index, const std::string& value);
  void set_tags(int index, std::string&& value);
  void set_tags(int index, const char* value);
  void set_tags(int index, const char* value, size_t size);
  std::string* add_tags();
  void add_tags(const std::string& value);
  void add_tags(std::string&& value);
  void add_tags(const char* value);
  void add_tags(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& tags() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_tags();
  private:
  const std::string& _internal_tags(int index) const;
  std::string* _internal_add_tags();
  public:

  // string statsd = 6;
  void clear_statsd();
  const std::string& statsd() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_statsd(ArgT0&& arg0, ArgT... args);
  std::string* mutable_statsd();
  PROTOBUF_NODISCARD std::string* release_statsd();
  void set_allocated_statsd(std::string* statsd);
  private:
  const std::string& _internal_statsd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_statsd(const std::string& value);
  std::string* _internal_mutable_statsd();
  public:

  // string statsdBucket = 7;
  void clear_statsdbucket();
  const std::string& statsdbucket() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_statsdbucket(ArgT0&& arg0, ArgT... args);
  std::string* mutable_statsdbucket();
  PROTOBUF_NODISCARD std::string* release_statsdbucket();
  void set_allocated_statsdbucket(std::string* statsdbucket);
  private:
  const std::string& _internal_statsdbucket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_statsdbucket(const std::string& value);
  std::string* _internal_mutable_statsdbucket();
  public:

  // string statsdTags = 8;
  void clear_statsdtags();
  const std::string& statsdtags() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_statsdtags(ArgT0&& arg0, ArgT... args);
  std::string* mutable_statsdtags();
  PROTOBUF_NODISCARD std::string* release_statsdtags();
  void set_allocated_statsdtags(std::string* statsdtags);
  private:
  const std::string& _internal_statsdtags() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_statsdtags(const std::string& value);
  std::string* _internal_mutable_statsdtags();
  public:

  // uint32 blockedLoopThreshold = 1;
  void clear_blockedloopthreshold();
  uint32_t blockedloopthreshold() const;
  void set_blockedloopthreshold(uint32_t value);
  private:
  uint32_t _internal_blockedloopthreshold() const;
  void _internal_set_blockedloopthreshold(uint32_t value);
  public:

  // uint32 interval = 2;
  void clear_interval();
  uint32_t interval() const;
  void set_interval(uint32_t value);
  private:
  uint32_t _internal_interval() const;
  void _internal_set_interval(uint32_t value);
  public:

  // bool pauseMetrics = 3;
  void clear_pausemetrics();
  bool pausemetrics() const;
  void set_pausemetrics(bool value);
  private:
  bool _internal_pausemetrics() const;
  void _internal_set_pausemetrics(bool value);
  public:

  // bool promiseTracking = 4;
  void clear_promisetracking();
  bool promisetracking() const;
  void set_promisetracking(bool value);
  private:
  bool _internal_promisetracking() const;
  void _internal_set_promisetracking(bool value);
  public:

  // bool redactSnapshots = 5;
  void clear_redactsnapshots();
  bool redactsnapshots() const;
  void set_redactsnapshots(bool value);
  private:
  bool _internal_redactsnapshots() const;
  void _internal_set_redactsnapshots(bool value);
  public:

  // bool tracingEnabled = 10;
  void clear_tracingenabled();
  bool tracingenabled() const;
  void set_tracingenabled(bool value);
  private:
  bool _internal_tracingenabled() const;
  void _internal_set_tracingenabled(bool value);
  public:

  // uint32 tracingModulesBlacklist = 11;
  void clear_tracingmodulesblacklist();
  uint32_t tracingmodulesblacklist() const;
  void set_tracingmodulesblacklist(uint32_t value);
  private:
  uint32_t _internal_tracingmodulesblacklist() const;
  void _internal_set_tracingmodulesblacklist(uint32_t value);
  public:

  // @@protoc_insertion_point(class_scope:grpcagent.ReconfigureBody)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> tags_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr statsd_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr statsdbucket_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr statsdtags_;
    uint32_t blockedloopthreshold_;
    uint32_t interval_;
    bool pausemetrics_;
    bool promisetracking_;
    bool redactsnapshots_;
    bool tracingenabled_;
    uint32_t tracingmodulesblacklist_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reconfigure_2eproto;
};
// -------------------------------------------------------------------

class ReconfigureEvent final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:grpcagent.ReconfigureEvent) */ {
 public:
  inline ReconfigureEvent() : ReconfigureEvent(nullptr) {}
  ~ReconfigureEvent() override;
  explicit PROTOBUF_CONSTEXPR ReconfigureEvent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ReconfigureEvent(const ReconfigureEvent& from);
  ReconfigureEvent(ReconfigureEvent&& from) noexcept
    : ReconfigureEvent() {
    *this = ::std::move(from);
  }

  inline ReconfigureEvent& operator=(const ReconfigureEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReconfigureEvent& operator=(ReconfigureEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReconfigureEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReconfigureEvent* internal_default_instance() {
    return reinterpret_cast<const ReconfigureEvent*>(
               &_ReconfigureEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ReconfigureEvent& a, ReconfigureEvent& b) {
    a.Swap(&b);
  }
  inline void Swap(ReconfigureEvent* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReconfigureEvent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReconfigureEvent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReconfigureEvent>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ReconfigureEvent& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ReconfigureEvent& from) {
    ReconfigureEvent::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ReconfigureEvent* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "grpcagent.ReconfigureEvent";
  }
  protected:
  explicit ReconfigureEvent(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCommonFieldNumber = 1,
    kBodyFieldNumber = 2,
  };
  // .grpcagent.CommonResponse common = 1;
  bool has_common() const;
  private:
  bool _internal_has_common() const;
  public:
  void clear_common();
  const ::grpcagent::CommonResponse& common() const;
  PROTOBUF_NODISCARD ::grpcagent::CommonResponse* release_common();
  ::grpcagent::CommonResponse* mutable_common();
  void set_allocated_common(::grpcagent::CommonResponse* common);
  private:
  const ::grpcagent::CommonResponse& _internal_common() const;
  ::grpcagent::CommonResponse* _internal_mutable_common();
  public:
  void unsafe_arena_set_allocated_common(
      ::grpcagent::CommonResponse* common);
  ::grpcagent::CommonResponse* unsafe_arena_release_common();

  // .grpcagent.ReconfigureBody body = 2;
  bool has_body() const;
  private:
  bool _internal_has_body() const;
  public:
  void clear_body();
  const ::grpcagent::ReconfigureBody& body() const;
  PROTOBUF_NODISCARD ::grpcagent::ReconfigureBody* release_body();
  ::grpcagent::ReconfigureBody* mutable_body();
  void set_allocated_body(::grpcagent::ReconfigureBody* body);
  private:
  const ::grpcagent::ReconfigureBody& _internal_body() const;
  ::grpcagent::ReconfigureBody* _internal_mutable_body();
  public:
  void unsafe_arena_set_allocated_body(
      ::grpcagent::ReconfigureBody* body);
  ::grpcagent::ReconfigureBody* unsafe_arena_release_body();

  // @@protoc_insertion_point(class_scope:grpcagent.ReconfigureEvent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::grpcagent::CommonResponse* common_;
    ::grpcagent::ReconfigureBody* body_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_reconfigure_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ReconfigureBody

// uint32 blockedLoopThreshold = 1;
inline void ReconfigureBody::clear_blockedloopthreshold() {
  _impl_.blockedloopthreshold_ = 0u;
}
inline uint32_t ReconfigureBody::_internal_blockedloopthreshold() const {
  return _impl_.blockedloopthreshold_;
}
inline uint32_t ReconfigureBody::blockedloopthreshold() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.blockedLoopThreshold)
  return _internal_blockedloopthreshold();
}
inline void ReconfigureBody::_internal_set_blockedloopthreshold(uint32_t value) {
  
  _impl_.blockedloopthreshold_ = value;
}
inline void ReconfigureBody::set_blockedloopthreshold(uint32_t value) {
  _internal_set_blockedloopthreshold(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.blockedLoopThreshold)
}

// uint32 interval = 2;
inline void ReconfigureBody::clear_interval() {
  _impl_.interval_ = 0u;
}
inline uint32_t ReconfigureBody::_internal_interval() const {
  return _impl_.interval_;
}
inline uint32_t ReconfigureBody::interval() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.interval)
  return _internal_interval();
}
inline void ReconfigureBody::_internal_set_interval(uint32_t value) {
  
  _impl_.interval_ = value;
}
inline void ReconfigureBody::set_interval(uint32_t value) {
  _internal_set_interval(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.interval)
}

// bool pauseMetrics = 3;
inline void ReconfigureBody::clear_pausemetrics() {
  _impl_.pausemetrics_ = false;
}
inline bool ReconfigureBody::_internal_pausemetrics() const {
  return _impl_.pausemetrics_;
}
inline bool ReconfigureBody::pausemetrics() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.pauseMetrics)
  return _internal_pausemetrics();
}
inline void ReconfigureBody::_internal_set_pausemetrics(bool value) {
  
  _impl_.pausemetrics_ = value;
}
inline void ReconfigureBody::set_pausemetrics(bool value) {
  _internal_set_pausemetrics(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.pauseMetrics)
}

// bool promiseTracking = 4;
inline void ReconfigureBody::clear_promisetracking() {
  _impl_.promisetracking_ = false;
}
inline bool ReconfigureBody::_internal_promisetracking() const {
  return _impl_.promisetracking_;
}
inline bool ReconfigureBody::promisetracking() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.promiseTracking)
  return _internal_promisetracking();
}
inline void ReconfigureBody::_internal_set_promisetracking(bool value) {
  
  _impl_.promisetracking_ = value;
}
inline void ReconfigureBody::set_promisetracking(bool value) {
  _internal_set_promisetracking(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.promiseTracking)
}

// bool redactSnapshots = 5;
inline void ReconfigureBody::clear_redactsnapshots() {
  _impl_.redactsnapshots_ = false;
}
inline bool ReconfigureBody::_internal_redactsnapshots() const {
  return _impl_.redactsnapshots_;
}
inline bool ReconfigureBody::redactsnapshots() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.redactSnapshots)
  return _internal_redactsnapshots();
}
inline void ReconfigureBody::_internal_set_redactsnapshots(bool value) {
  
  _impl_.redactsnapshots_ = value;
}
inline void ReconfigureBody::set_redactsnapshots(bool value) {
  _internal_set_redactsnapshots(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.redactSnapshots)
}

// string statsd = 6;
inline void ReconfigureBody::clear_statsd() {
  _impl_.statsd_.ClearToEmpty();
}
inline const std::string& ReconfigureBody::statsd() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.statsd)
  return _internal_statsd();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ReconfigureBody::set_statsd(ArgT0&& arg0, ArgT... args) {
 
 _impl_.statsd_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.statsd)
}
inline std::string* ReconfigureBody::mutable_statsd() {
  std::string* _s = _internal_mutable_statsd();
  // @@protoc_insertion_point(field_mutable:grpcagent.ReconfigureBody.statsd)
  return _s;
}
inline const std::string& ReconfigureBody::_internal_statsd() const {
  return _impl_.statsd_.Get();
}
inline void ReconfigureBody::_internal_set_statsd(const std::string& value) {
  
  _impl_.statsd_.Set(value, GetArenaForAllocation());
}
inline std::string* ReconfigureBody::_internal_mutable_statsd() {
  
  return _impl_.statsd_.Mutable(GetArenaForAllocation());
}
inline std::string* ReconfigureBody::release_statsd() {
  // @@protoc_insertion_point(field_release:grpcagent.ReconfigureBody.statsd)
  return _impl_.statsd_.Release();
}
inline void ReconfigureBody::set_allocated_statsd(std::string* statsd) {
  if (statsd != nullptr) {
    
  } else {
    
  }
  _impl_.statsd_.SetAllocated(statsd, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.statsd_.IsDefault()) {
    _impl_.statsd_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcagent.ReconfigureBody.statsd)
}

// string statsdBucket = 7;
inline void ReconfigureBody::clear_statsdbucket() {
  _impl_.statsdbucket_.ClearToEmpty();
}
inline const std::string& ReconfigureBody::statsdbucket() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.statsdBucket)
  return _internal_statsdbucket();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ReconfigureBody::set_statsdbucket(ArgT0&& arg0, ArgT... args) {
 
 _impl_.statsdbucket_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.statsdBucket)
}
inline std::string* ReconfigureBody::mutable_statsdbucket() {
  std::string* _s = _internal_mutable_statsdbucket();
  // @@protoc_insertion_point(field_mutable:grpcagent.ReconfigureBody.statsdBucket)
  return _s;
}
inline const std::string& ReconfigureBody::_internal_statsdbucket() const {
  return _impl_.statsdbucket_.Get();
}
inline void ReconfigureBody::_internal_set_statsdbucket(const std::string& value) {
  
  _impl_.statsdbucket_.Set(value, GetArenaForAllocation());
}
inline std::string* ReconfigureBody::_internal_mutable_statsdbucket() {
  
  return _impl_.statsdbucket_.Mutable(GetArenaForAllocation());
}
inline std::string* ReconfigureBody::release_statsdbucket() {
  // @@protoc_insertion_point(field_release:grpcagent.ReconfigureBody.statsdBucket)
  return _impl_.statsdbucket_.Release();
}
inline void ReconfigureBody::set_allocated_statsdbucket(std::string* statsdbucket) {
  if (statsdbucket != nullptr) {
    
  } else {
    
  }
  _impl_.statsdbucket_.SetAllocated(statsdbucket, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.statsdbucket_.IsDefault()) {
    _impl_.statsdbucket_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcagent.ReconfigureBody.statsdBucket)
}

// string statsdTags = 8;
inline void ReconfigureBody::clear_statsdtags() {
  _impl_.statsdtags_.ClearToEmpty();
}
inline const std::string& ReconfigureBody::statsdtags() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.statsdTags)
  return _internal_statsdtags();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ReconfigureBody::set_statsdtags(ArgT0&& arg0, ArgT... args) {
 
 _impl_.statsdtags_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.statsdTags)
}
inline std::string* ReconfigureBody::mutable_statsdtags() {
  std::string* _s = _internal_mutable_statsdtags();
  // @@protoc_insertion_point(field_mutable:grpcagent.ReconfigureBody.statsdTags)
  return _s;
}
inline const std::string& ReconfigureBody::_internal_statsdtags() const {
  return _impl_.statsdtags_.Get();
}
inline void ReconfigureBody::_internal_set_statsdtags(const std::string& value) {
  
  _impl_.statsdtags_.Set(value, GetArenaForAllocation());
}
inline std::string* ReconfigureBody::_internal_mutable_statsdtags() {
  
  return _impl_.statsdtags_.Mutable(GetArenaForAllocation());
}
inline std::string* ReconfigureBody::release_statsdtags() {
  // @@protoc_insertion_point(field_release:grpcagent.ReconfigureBody.statsdTags)
  return _impl_.statsdtags_.Release();
}
inline void ReconfigureBody::set_allocated_statsdtags(std::string* statsdtags) {
  if (statsdtags != nullptr) {
    
  } else {
    
  }
  _impl_.statsdtags_.SetAllocated(statsdtags, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.statsdtags_.IsDefault()) {
    _impl_.statsdtags_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:grpcagent.ReconfigureBody.statsdTags)
}

// repeated string tags = 9;
inline int ReconfigureBody::_internal_tags_size() const {
  return _impl_.tags_.size();
}
inline int ReconfigureBody::tags_size() const {
  return _internal_tags_size();
}
inline void ReconfigureBody::clear_tags() {
  _impl_.tags_.Clear();
}
inline std::string* ReconfigureBody::add_tags() {
  std::string* _s = _internal_add_tags();
  // @@protoc_insertion_point(field_add_mutable:grpcagent.ReconfigureBody.tags)
  return _s;
}
inline const std::string& ReconfigureBody::_internal_tags(int index) const {
  return _impl_.tags_.Get(index);
}
inline const std::string& ReconfigureBody::tags(int index) const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.tags)
  return _internal_tags(index);
}
inline std::string* ReconfigureBody::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:grpcagent.ReconfigureBody.tags)
  return _impl_.tags_.Mutable(index);
}
inline void ReconfigureBody::set_tags(int index, const std::string& value) {
  _impl_.tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.tags)
}
inline void ReconfigureBody::set_tags(int index, std::string&& value) {
  _impl_.tags_.Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.tags)
}
inline void ReconfigureBody::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:grpcagent.ReconfigureBody.tags)
}
inline void ReconfigureBody::set_tags(int index, const char* value, size_t size) {
  _impl_.tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:grpcagent.ReconfigureBody.tags)
}
inline std::string* ReconfigureBody::_internal_add_tags() {
  return _impl_.tags_.Add();
}
inline void ReconfigureBody::add_tags(const std::string& value) {
  _impl_.tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:grpcagent.ReconfigureBody.tags)
}
inline void ReconfigureBody::add_tags(std::string&& value) {
  _impl_.tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:grpcagent.ReconfigureBody.tags)
}
inline void ReconfigureBody::add_tags(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _impl_.tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:grpcagent.ReconfigureBody.tags)
}
inline void ReconfigureBody::add_tags(const char* value, size_t size) {
  _impl_.tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:grpcagent.ReconfigureBody.tags)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ReconfigureBody::tags() const {
  // @@protoc_insertion_point(field_list:grpcagent.ReconfigureBody.tags)
  return _impl_.tags_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ReconfigureBody::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:grpcagent.ReconfigureBody.tags)
  return &_impl_.tags_;
}

// bool tracingEnabled = 10;
inline void ReconfigureBody::clear_tracingenabled() {
  _impl_.tracingenabled_ = false;
}
inline bool ReconfigureBody::_internal_tracingenabled() const {
  return _impl_.tracingenabled_;
}
inline bool ReconfigureBody::tracingenabled() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.tracingEnabled)
  return _internal_tracingenabled();
}
inline void ReconfigureBody::_internal_set_tracingenabled(bool value) {
  
  _impl_.tracingenabled_ = value;
}
inline void ReconfigureBody::set_tracingenabled(bool value) {
  _internal_set_tracingenabled(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.tracingEnabled)
}

// uint32 tracingModulesBlacklist = 11;
inline void ReconfigureBody::clear_tracingmodulesblacklist() {
  _impl_.tracingmodulesblacklist_ = 0u;
}
inline uint32_t ReconfigureBody::_internal_tracingmodulesblacklist() const {
  return _impl_.tracingmodulesblacklist_;
}
inline uint32_t ReconfigureBody::tracingmodulesblacklist() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureBody.tracingModulesBlacklist)
  return _internal_tracingmodulesblacklist();
}
inline void ReconfigureBody::_internal_set_tracingmodulesblacklist(uint32_t value) {
  
  _impl_.tracingmodulesblacklist_ = value;
}
inline void ReconfigureBody::set_tracingmodulesblacklist(uint32_t value) {
  _internal_set_tracingmodulesblacklist(value);
  // @@protoc_insertion_point(field_set:grpcagent.ReconfigureBody.tracingModulesBlacklist)
}

// -------------------------------------------------------------------

// ReconfigureEvent

// .grpcagent.CommonResponse common = 1;
inline bool ReconfigureEvent::_internal_has_common() const {
  return this != internal_default_instance() && _impl_.common_ != nullptr;
}
inline bool ReconfigureEvent::has_common() const {
  return _internal_has_common();
}
inline const ::grpcagent::CommonResponse& ReconfigureEvent::_internal_common() const {
  const ::grpcagent::CommonResponse* p = _impl_.common_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpcagent::CommonResponse&>(
      ::grpcagent::_CommonResponse_default_instance_);
}
inline const ::grpcagent::CommonResponse& ReconfigureEvent::common() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureEvent.common)
  return _internal_common();
}
inline void ReconfigureEvent::unsafe_arena_set_allocated_common(
    ::grpcagent::CommonResponse* common) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.common_);
  }
  _impl_.common_ = common;
  if (common) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpcagent.ReconfigureEvent.common)
}
inline ::grpcagent::CommonResponse* ReconfigureEvent::release_common() {
  
  ::grpcagent::CommonResponse* temp = _impl_.common_;
  _impl_.common_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpcagent::CommonResponse* ReconfigureEvent::unsafe_arena_release_common() {
  // @@protoc_insertion_point(field_release:grpcagent.ReconfigureEvent.common)
  
  ::grpcagent::CommonResponse* temp = _impl_.common_;
  _impl_.common_ = nullptr;
  return temp;
}
inline ::grpcagent::CommonResponse* ReconfigureEvent::_internal_mutable_common() {
  
  if (_impl_.common_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpcagent::CommonResponse>(GetArenaForAllocation());
    _impl_.common_ = p;
  }
  return _impl_.common_;
}
inline ::grpcagent::CommonResponse* ReconfigureEvent::mutable_common() {
  ::grpcagent::CommonResponse* _msg = _internal_mutable_common();
  // @@protoc_insertion_point(field_mutable:grpcagent.ReconfigureEvent.common)
  return _msg;
}
inline void ReconfigureEvent::set_allocated_common(::grpcagent::CommonResponse* common) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.common_);
  }
  if (common) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(
                reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(common));
    if (message_arena != submessage_arena) {
      common = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, common, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.common_ = common;
  // @@protoc_insertion_point(field_set_allocated:grpcagent.ReconfigureEvent.common)
}

// .grpcagent.ReconfigureBody body = 2;
inline bool ReconfigureEvent::_internal_has_body() const {
  return this != internal_default_instance() && _impl_.body_ != nullptr;
}
inline bool ReconfigureEvent::has_body() const {
  return _internal_has_body();
}
inline void ReconfigureEvent::clear_body() {
  if (GetArenaForAllocation() == nullptr && _impl_.body_ != nullptr) {
    delete _impl_.body_;
  }
  _impl_.body_ = nullptr;
}
inline const ::grpcagent::ReconfigureBody& ReconfigureEvent::_internal_body() const {
  const ::grpcagent::ReconfigureBody* p = _impl_.body_;
  return p != nullptr ? *p : reinterpret_cast<const ::grpcagent::ReconfigureBody&>(
      ::grpcagent::_ReconfigureBody_default_instance_);
}
inline const ::grpcagent::ReconfigureBody& ReconfigureEvent::body() const {
  // @@protoc_insertion_point(field_get:grpcagent.ReconfigureEvent.body)
  return _internal_body();
}
inline void ReconfigureEvent::unsafe_arena_set_allocated_body(
    ::grpcagent::ReconfigureBody* body) {
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.body_);
  }
  _impl_.body_ = body;
  if (body) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:grpcagent.ReconfigureEvent.body)
}
inline ::grpcagent::ReconfigureBody* ReconfigureEvent::release_body() {
  
  ::grpcagent::ReconfigureBody* temp = _impl_.body_;
  _impl_.body_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old =  reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
  temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  if (GetArenaForAllocation() == nullptr) { delete old; }
#else  // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return temp;
}
inline ::grpcagent::ReconfigureBody* ReconfigureEvent::unsafe_arena_release_body() {
  // @@protoc_insertion_point(field_release:grpcagent.ReconfigureEvent.body)
  
  ::grpcagent::ReconfigureBody* temp = _impl_.body_;
  _impl_.body_ = nullptr;
  return temp;
}
inline ::grpcagent::ReconfigureBody* ReconfigureEvent::_internal_mutable_body() {
  
  if (_impl_.body_ == nullptr) {
    auto* p = CreateMaybeMessage<::grpcagent::ReconfigureBody>(GetArenaForAllocation());
    _impl_.body_ = p;
  }
  return _impl_.body_;
}
inline ::grpcagent::ReconfigureBody* ReconfigureEvent::mutable_body() {
  ::grpcagent::ReconfigureBody* _msg = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:grpcagent.ReconfigureEvent.body)
  return _msg;
}
inline void ReconfigureEvent::set_allocated_body(::grpcagent::ReconfigureBody* body) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  if (message_arena == nullptr) {
    delete _impl_.body_;
  }
  if (body) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
        ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(body);
    if (message_arena != submessage_arena) {
      body = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  _impl_.body_ = body;
  // @@protoc_insertion_point(field_set_allocated:grpcagent.ReconfigureEvent.body)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcagent

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_reconfigure_2eproto
